// <auto-generated />
using System;
using ERPWebApp.Data.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ERPWebApp.Data.EF.Migrations
{
    [DbContext(typeof(ERPDbContext))]
    [Migration("20190315083951_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-preview1-35029")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ERPWebApp.Data.Entities.ArAccountsReceivable", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Amount");

                    b.Property<string>("ArNo")
                        .HasColumnName("AR_No")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<int?>("CustomerFk")
                        .HasColumnName("Customer_FK");

                    b.Property<DateTime?>("DateCreated");

                    b.Property<DateTime?>("DateModified");

                    b.Property<string>("Department")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<string>("Description")
                        .HasMaxLength(255);

                    b.Property<int?>("PoNo")
                        .HasColumnName("PO_No");

                    b.Property<int?>("ProjectId");

                    b.Property<string>("RecordCode")
                        .HasColumnName("Record_Code")
                        .HasColumnType("char(2)");

                    b.Property<int?>("TransactNo")
                        .HasColumnName("Transact_No");

                    b.Property<DateTime?>("Transaction_Date");

                    b.Property<string>("Type")
                        .HasMaxLength(2);

                    b.Property<string>("WarehouseFk")
                        .HasColumnName("Warehouse_FK")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.HasKey("KeyId");

                    b.HasIndex("ProjectId")
                        .HasName("IX_ProjectId");

                    b.ToTable("AR_AccountsReceivable");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.ArAccountsReceivableAdjustments", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Amount");

                    b.Property<Guid?>("AuthorizedBy")
                        .HasColumnName("Authorized_By");

                    b.Property<string>("CreditAccount")
                        .HasColumnName("Credit_Account")
                        .HasColumnType("char(7)");

                    b.Property<string>("CustomerNo")
                        .HasColumnName("Customer_No")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<string>("DebitAccount")
                        .HasColumnName("Debit_Account")
                        .HasColumnType("char(7)");

                    b.Property<DateTime?>("InvoiceDate")
                        .HasColumnName("Invoice_Date")
                        .HasColumnType("datetime");

                    b.Property<string>("InvoiceNo")
                        .HasColumnName("Invoice_No")
                        .HasMaxLength(15);

                    b.Property<int?>("TranType")
                        .HasColumnName("Tran_Type");

                    b.Property<DateTime?>("VoucherDate")
                        .HasColumnName("Voucher_Date")
                        .HasColumnType("datetime");

                    b.Property<string>("VoucherNo")
                        .HasColumnName("Voucher_No")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.HasKey("KeyId");

                    b.HasIndex("AuthorizedBy")
                        .HasName("IX_Authorized_By");

                    b.HasIndex("TranType")
                        .HasName("IX_Tran_Type");

                    b.ToTable("AR_AccountsReceivableAdjustments");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.ArGeneralJournal", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Amount");

                    b.Property<string>("CreditAccount")
                        .HasColumnType("char(7)");

                    b.Property<DateTime?>("DateCreated");

                    b.Property<DateTime?>("DateModified");

                    b.Property<string>("DebitAccount")
                        .HasColumnType("char(7)");

                    b.Property<string>("Description")
                        .HasMaxLength(255);

                    b.Property<int?>("Reference");

                    b.Property<DateTime?>("ReferenceDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("Status")
                        .HasColumnName("status");

                    b.Property<string>("Type")
                        .HasMaxLength(2);

                    b.HasKey("KeyId");

                    b.ToTable("AR_GeneralJournal");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.ArInvoice", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Amount");

                    b.Property<int?>("ArinvoiceStatusFk")
                        .HasColumnName("ARInvoiceStatus_FK");

                    b.Property<int?>("CustomerFK")
                        .HasColumnName("Customer_FK");

                    b.Property<DateTime?>("CustomerPodate")
                        .HasColumnName("CustomerPODate")
                        .HasColumnType("datetime");

                    b.Property<string>("CustomerPonumber")
                        .HasColumnName("CustomerPONumber")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<DateTime?>("DateCreated");

                    b.Property<DateTime?>("DateModified");

                    b.Property<string>("DebitOrCredit")
                        .HasColumnType("char(1)");

                    b.Property<string>("Description")
                        .HasMaxLength(255);

                    b.Property<decimal>("Discount");

                    b.Property<decimal>("Freight");

                    b.Property<string>("GlAccount")
                        .HasColumnName("GL_Account")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("InvoiceId")
                        .HasColumnName("InvoiceID")
                        .HasMaxLength(20);

                    b.Property<decimal>("PaidAmount");

                    b.Property<int?>("PaymentTermFk")
                        .HasColumnName("PaymentTerm_FK");

                    b.Property<decimal>("SalesAmount")
                        .HasColumnName("Sales_Amount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<Guid?>("SalespersonNo")
                        .HasColumnName("Salesperson_No");

                    b.Property<int?>("SoId")
                        .HasColumnName("SO_ID");

                    b.Property<decimal>("TotalInvoice")
                        .HasColumnName("Total_Invoice")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("TotalTax")
                        .HasColumnName("Total_Tax")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Type")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<decimal>("UnpaidAmount");

                    b.HasKey("KeyId");

                    b.HasIndex("ArinvoiceStatusFk")
                        .HasName("IX_ARInvoiceStatus_FK");

                    b.HasIndex("CustomerFK")
                        .HasName("IX_Customer_FK");

                    b.HasIndex("PaymentTermFk")
                        .HasName("IX_PaymentTerm_FK");

                    b.HasIndex("SalespersonNo")
                        .HasName("IX_Salesperson_No");

                    b.HasIndex("SoId")
                        .HasName("IX_SO_ID");

                    b.ToTable("AR_Invoice");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.ArInvoiceDetail", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .HasMaxLength(255);

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<double?>("DiscountPercent");

                    b.Property<int?>("InventoryFk")
                        .HasColumnName("Inventory_FK");

                    b.Property<int?>("InvoiceFk")
                        .HasColumnName("Invoice_FK");

                    b.Property<int?>("QtyBackOrdered");

                    b.Property<int?>("QtyOrderedNow");

                    b.Property<int?>("QtyShipped")
                        .HasColumnName("Qty_Shipped");

                    b.Property<decimal>("Subtotal")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("Tax")
                        .HasColumnType("decimal(65,30)");

                    b.Property<double?>("TaxRate");

                    b.Property<int?>("UnitFk")
                        .HasColumnName("Unit_FK");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnName("Unit_Price")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("KeyId");

                    b.HasIndex("InventoryFk")
                        .HasName("IX_Inventory_FK");

                    b.HasIndex("InvoiceFk")
                        .HasName("IX_Invoice_FK");

                    b.HasIndex("UnitFk")
                        .HasName("IX_Unit_FK");

                    b.ToTable("AR_InvoiceDetail");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.ArInvoiceStatus", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ARInvoiceStatusName")
                        .IsRequired()
                        .HasColumnName("ARInvoiceStatusName")
                        .HasMaxLength(100);

                    b.Property<string>("Id")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.HasKey("KeyId");

                    b.ToTable("AR_InvoiceStatus");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.ArPeriodPayment", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Note")
                        .HasMaxLength(1000);

                    b.Property<decimal>("PaidAmount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("PaymentAmount")
                        .HasColumnName("Payment_Amount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("datetime");

                    b.Property<double?>("PaymentPercent");

                    b.Property<string>("PeriodName")
                        .IsRequired()
                        .HasMaxLength(25);

                    b.Property<int>("ProjectFk")
                        .HasColumnName("Project_FK");

                    b.Property<decimal>("UnpaidAmount")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("KeyId");

                    b.HasIndex("ProjectFk")
                        .HasName("IX_Project_FK");

                    b.ToTable("AR_PeriodPayment");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.ArPeriodPaymentDetail", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .HasMaxLength(500);

                    b.Property<int>("PeriodPaymentFk")
                        .HasColumnName("PeriodPayment_FK");

                    b.HasKey("KeyId");

                    b.HasIndex("PeriodPaymentFk")
                        .HasName("IX_PeriodPayment_FK");

                    b.ToTable("AR_PeriodPaymentDetail");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.ArSalesEvent", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("CustomerAddressBookFk")
                        .HasColumnName("CustomerAddressBook_FK");

                    b.Property<DateTime?>("CustomerPodate")
                        .HasColumnName("CustomerPODate")
                        .HasColumnType("datetime");

                    b.Property<string>("CustomerPonumber")
                        .HasColumnName("CustomerPONumber")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("Freight")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime?>("InvoiceDate")
                        .HasColumnName("Invoice_Date")
                        .HasColumnType("datetime");

                    b.Property<int?>("InvoiceFk")
                        .HasColumnName("Invoice_FK");

                    b.Property<decimal>("SalesAmount")
                        .HasColumnName("Sales_Amount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<Guid?>("SalesPersonNo")
                        .HasColumnName("SalesPerson_No");

                    b.Property<decimal>("TaxAmount")
                        .HasColumnName("Tax_Amount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("TotalInvoice")
                        .HasColumnName("Total_Invoice")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("KeyId");

                    b.ToTable("AR_SalesEvent");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.BoqAcceptance", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AcceptanceStatus_FK");

                    b.Property<DateTime?>("Acceptance_Date");

                    b.Property<string>("Acceptance_ID")
                        .HasMaxLength(50);

                    b.Property<Guid?>("CreatePaymentBy_FK");

                    b.Property<DateTime?>("DateCreated");

                    b.Property<DateTime?>("DateModified");

                    b.Property<Guid?>("Engineer_FK");

                    b.Property<int?>("PaymentPeriod");

                    b.Property<string>("Payment_ID")
                        .HasMaxLength(15);

                    b.Property<int?>("SO_FK");

                    b.Property<int>("Status");

                    b.Property<decimal>("Total");

                    b.HasKey("KeyId");

                    b.HasIndex("AcceptanceStatus_FK");

                    b.HasIndex("CreatePaymentBy_FK");

                    b.HasIndex("Engineer_FK");

                    b.HasIndex("SO_FK");

                    b.ToTable("BoqAcceptances");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.BoqAcceptanceDetail", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Acceptance_FK");

                    b.Property<decimal>("AccumulatedLastBillAcc");

                    b.Property<double?>("AccumulatedLastPercentAcc");

                    b.Property<double?>("AccumulatedLastQtyAcc");

                    b.Property<decimal>("AccumulatedNowBillAcc");

                    b.Property<double?>("AccumulatedNowPercentAcc");

                    b.Property<double?>("AccumulatedNowQtyAcc");

                    b.Property<int?>("OrderDetail_FK");

                    b.Property<double?>("PercentAcceptanceNow");

                    b.Property<double?>("QtyAcceptanceNow");

                    b.Property<double?>("QtyOrdered");

                    b.Property<decimal>("Subtotal");

                    b.Property<decimal>("UnitPrice");

                    b.Property<int?>("Unit_FK");

                    b.Property<string>("Unit_Name");

                    b.HasKey("KeyId");

                    b.HasIndex("Acceptance_FK");

                    b.HasIndex("OrderDetail_FK");

                    b.HasIndex("Unit_FK");

                    b.ToTable("BoqAcceptanceDetails");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.BoqAcceptanceStatus", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .HasMaxLength(255);

                    b.Property<string>("Id")
                        .HasMaxLength(15);

                    b.Property<string>("SOStatusName")
                        .HasMaxLength(50);

                    b.HasKey("KeyId");

                    b.ToTable("BoqAcceptanceStatuses");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.BoqOrderDetail", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BOMCode_FK")
                        .IsRequired()
                        .HasMaxLength(25);

                    b.Property<string>("Description")
                        .HasMaxLength(1000);

                    b.Property<decimal>("Equipment_Price");

                    b.Property<decimal>("Equipment_PriceB2");

                    b.Property<int?>("IcUnitKeyId");

                    b.Property<int>("IdRow");

                    b.Property<decimal>("Labor_Price");

                    b.Property<decimal>("Labor_PriceB2");

                    b.Property<int?>("LevelHeader");

                    b.Property<decimal>("Material_Price");

                    b.Property<decimal>("Material_PriceB2");

                    b.Property<string>("NameHeader")
                        .HasMaxLength(15);

                    b.Property<string>("Note")
                        .HasMaxLength(500);

                    b.Property<int?>("Parent_Id");

                    b.Property<string>("Product_Name")
                        .HasMaxLength(255);

                    b.Property<double?>("QtyB2");

                    b.Property<double?>("QtyOrdered");

                    b.Property<int>("SODetailStatus_FK");

                    b.Property<int>("SO_FK");

                    b.Property<decimal>("Subtotal");

                    b.Property<decimal>("SubtotalB2");

                    b.Property<decimal>("TotalPrice");

                    b.Property<decimal>("TotalPriceB2");

                    b.Property<double>("TotalQtyOrdered");

                    b.Property<int?>("UnitFK");

                    b.Property<string>("UnitName");

                    b.Property<int?>("stt");

                    b.HasKey("KeyId");

                    b.HasIndex("IcUnitKeyId");

                    b.HasIndex("SO_FK");

                    b.HasIndex("UnitFK");

                    b.ToTable("BoqOrderDetails");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.BoqOrderDetailBom", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BOMofTotal_FK");

                    b.Property<string>("BomCodeFK")
                        .IsRequired();

                    b.Property<string>("BomDetailFK")
                        .HasMaxLength(15);

                    b.Property<double?>("Discount_Rate");

                    b.Property<string>("NameBomdetail")
                        .HasMaxLength(500);

                    b.Property<string>("Note")
                        .HasMaxLength(1000);

                    b.Property<int>("OrderDetailFK");

                    b.Property<decimal>("PriceB1");

                    b.Property<decimal>("PriceB1_Old");

                    b.Property<decimal>("PriceB2");

                    b.Property<int?>("Product_Type");

                    b.Property<double?>("Qty");

                    b.Property<decimal>("SubTotalB1");

                    b.Property<decimal>("SubTotalB2");

                    b.Property<int?>("UnitFK");

                    b.Property<string>("UnitName");

                    b.HasKey("KeyId");

                    b.HasIndex("OrderDetailFK");

                    b.HasIndex("Product_Type");

                    b.HasIndex("UnitFK");

                    b.ToTable("BoqOrderDetailBoms");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.BoqOrderStatus", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Id")
                        .HasMaxLength(25);

                    b.Property<string>("SOStatusName")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.HasKey("KeyId");

                    b.ToTable("BoqOrderStatuses");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.BoqSalesOrder", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("CreatedBy_FK");

                    b.Property<DateTime?>("CustomerPODate");

                    b.Property<string>("CustomerPONumber")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DateCreated");

                    b.Property<DateTime?>("DateModified");

                    b.Property<DateTime?>("DateRequestBOQ2");

                    b.Property<string>("Description")
                        .HasMaxLength(300);

                    b.Property<decimal>("Discount_Amt");

                    b.Property<double?>("Discount_K1");

                    b.Property<DateTime?>("FinishDate");

                    b.Property<decimal>("GeneralExpensesAmount");

                    b.Property<decimal>("GeneralExpensesAmountBOQ2");

                    b.Property<double?>("GeneralExpensesRate");

                    b.Property<Guid?>("LastUpdatedBy_FK");

                    b.Property<Guid?>("LastUpdatedBy_FKBOQ2");

                    b.Property<DateTime>("LastUpdatedDate");

                    b.Property<int?>("Ndate");

                    b.Property<double?>("Price_K3");

                    b.Property<decimal>("ProfitAmount");

                    b.Property<decimal>("ProfitAmountBOQ2");

                    b.Property<double?>("ProfitRate");

                    b.Property<int>("ProjectFK");

                    b.Property<decimal>("Provision_Amount");

                    b.Property<decimal>("Provision_AmountUsed");

                    b.Property<double?>("Provision_K4");

                    b.Property<double?>("Qty_K2");

                    b.Property<DateTime>("SODate");

                    b.Property<int>("SOStatus_FK");

                    b.Property<string>("SO_ref")
                        .HasMaxLength(25);

                    b.Property<int?>("SalesPerson_FK");

                    b.Property<DateTime?>("ScheduleFinishDate");

                    b.Property<DateTime?>("ScheduleStartDate");

                    b.Property<DateTime?>("StartDate");

                    b.Property<int>("Status");

                    b.Property<decimal>("Subtotal");

                    b.Property<decimal>("SubtotalBOQ2");

                    b.Property<double?>("TaxRate");

                    b.Property<decimal>("Tax_Amount");

                    b.Property<decimal>("Tax_AmountBOQ2");

                    b.Property<decimal>("Total_Order");

                    b.Property<decimal>("Total_OrderBOQ2");

                    b.Property<string>("Version_name")
                        .HasMaxLength(100);

                    b.Property<int>("maxIdOrderdetail");

                    b.HasKey("KeyId");

                    b.HasIndex("CreatedBy_FK");

                    b.HasIndex("LastUpdatedBy_FK");

                    b.HasIndex("LastUpdatedBy_FKBOQ2");

                    b.HasIndex("ProjectFK");

                    b.HasIndex("SOStatus_FK");

                    b.HasIndex("SalesPerson_FK");

                    b.ToTable("BoqSalesOrders");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.BoqSyntheticMaterials", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BomDetailFK")
                        .HasMaxLength(15);

                    b.Property<string>("NameBomdetail")
                        .HasMaxLength(500);

                    b.Property<string>("Note")
                        .HasMaxLength(1000);

                    b.Property<decimal>("PriceB1");

                    b.Property<decimal>("PriceB2");

                    b.Property<int?>("Product_Type");

                    b.Property<int>("SaleOrderFK");

                    b.Property<double>("TotalQtyB1");

                    b.Property<double>("TotalQtyB2");

                    b.Property<double>("TotalQtyOrdered");

                    b.Property<int?>("UnitFK")
                        .IsRequired();

                    b.Property<string>("UnitName");

                    b.HasKey("KeyId");

                    b.HasIndex("Product_Type");

                    b.HasIndex("SaleOrderFK");

                    b.HasIndex("UnitFK");

                    b.ToTable("BoqSyntheticMaterials");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.CrCashReceipts", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("CheckAmount")
                        .HasColumnName("Check_Amount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("CheckNo")
                        .HasColumnName("Check_No")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<Guid?>("CreatedByFk")
                        .HasColumnName("CreatedBy_FK");

                    b.Property<int?>("CustomerFk")
                        .HasColumnName("Customer_FK");

                    b.Property<DateTime?>("DateCreated");

                    b.Property<DateTime?>("DateModified");

                    b.Property<string>("DepositNo")
                        .HasColumnName("Deposit_No")
                        .HasMaxLength(15);

                    b.Property<string>("Description")
                        .HasMaxLength(255);

                    b.Property<bool?>("FormType");

                    b.Property<Guid?>("LastUpdatedByFk")
                        .HasColumnName("LastUpdatedBy_FK");

                    b.Property<bool?>("Payment");

                    b.Property<int?>("ProjectId");

                    b.Property<string>("ReceiptNo")
                        .HasColumnName("Receipt_No")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<int?>("ReceiptType")
                        .HasColumnName("Receipt_Type");

                    b.HasKey("KeyId");

                    b.HasIndex("CreatedByFk")
                        .HasName("IX_CreatedBy_FK");

                    b.HasIndex("LastUpdatedByFk")
                        .HasName("IX_LastUpdatedBy_FK");

                    b.ToTable("CR_CashReceipts");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.CrCashReceiptsAccountDetail", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("CreditAccount")
                        .HasMaxLength(7)
                        .IsUnicode(false);

                    b.Property<string>("DebitAccount")
                        .HasMaxLength(7)
                        .IsUnicode(false);

                    b.Property<string>("Description")
                        .HasMaxLength(255);

                    b.Property<int?>("ReceiptFk")
                        .HasColumnName("Receipt_FK");

                    b.HasKey("KeyId");

                    b.HasIndex("ReceiptFk")
                        .HasName("IX_Receipt_FK");

                    b.ToTable("CR_CashReceiptsAccountDetail");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.CrCashReceiptsDetail", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("AccumulatedLastAmountAcc")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("CollectedAmount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("DepositNo")
                        .HasColumnName("Deposit_No")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("InvoiceAmount")
                        .HasColumnName("Invoice_Amount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime?>("InvoiceDate")
                        .HasColumnName("Invoice_Date")
                        .HasColumnType("datetime");

                    b.Property<int?>("InvoiceNo")
                        .HasColumnName("Invoice_No");

                    b.Property<double>("PercentPayment");

                    b.Property<string>("PeriodName")
                        .HasMaxLength(10);

                    b.Property<int?>("ReceiptFk")
                        .HasColumnName("Receipt_FK");

                    b.Property<decimal>("RemainedAmount")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("KeyId");

                    b.HasIndex("ReceiptFk")
                        .HasName("IX_Receipt_FK");

                    b.ToTable("CR_CashReceiptsDetail");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.CrRemittanceAdvice", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CustomerNo")
                        .HasColumnName("Customer_No");

                    b.Property<int?>("InvoiceNo")
                        .HasColumnName("Invoice_No");

                    b.Property<decimal>("RaAmount")
                        .HasColumnName("RA_Amount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime?>("RaDate")
                        .HasColumnName("RA_Date")
                        .HasColumnType("datetime");

                    b.Property<string>("RaNo")
                        .HasColumnName("RA_No")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.HasKey("KeyId");

                    b.HasIndex("InvoiceNo")
                        .HasName("IX_Invoice_No");

                    b.ToTable("CR_RemittanceAdvice");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.Document", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Link")
                        .HasMaxLength(500);

                    b.Property<string>("Name")
                        .HasMaxLength(200);

                    b.Property<string>("Note")
                        .HasMaxLength(1000);

                    b.Property<int?>("ProjectFk")
                        .HasColumnName("ProjectFK");

                    b.HasKey("KeyId");

                    b.HasIndex("ProjectFk")
                        .HasName("IX_ProjectFK");

                    b.ToTable("Document");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.EdittingForms", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("EditorFk")
                        .HasColumnName("EditorFK");

                    b.Property<int>("FormId");

                    b.Property<int>("TableId");

                    b.Property<DateTime?>("TimeBegin")
                        .HasColumnType("datetime");

                    b.HasKey("KeyId");

                    b.ToTable("EdittingForms");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.ErrorLogs", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("DateCreated");

                    b.Property<DateTime?>("DateModified");

                    b.Property<string>("ErrorContent");

                    b.Property<DateTime?>("ErrorTime")
                        .HasColumnType("datetime");

                    b.Property<string>("FormName")
                        .HasMaxLength(500);

                    b.Property<string>("FullName")
                        .HasMaxLength(100);

                    b.Property<string>("Level")
                        .HasMaxLength(25);

                    b.Property<string>("Type")
                        .HasMaxLength(30);

                    b.HasKey("KeyId");

                    b.ToTable("ErrorLogs");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.Function", b =>
                {
                    b.Property<string>("KeyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(128)");

                    b.Property<string>("IconCss");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.Property<string>("ParentId")
                        .HasMaxLength(128);

                    b.Property<int>("SortOrder");

                    b.Property<int>("Status");

                    b.Property<string>("URL")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.HasKey("KeyId");

                    b.ToTable("Functions");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.GlGeneralLedger", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccountFk")
                        .HasColumnName("Account_FK");

                    b.Property<string>("AccountNo")
                        .HasColumnName("Account_No")
                        .HasMaxLength(7);

                    b.Property<decimal>("BeginBalance")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("CurrentBalance")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("NormalBalance")
                        .HasColumnType("char(1)");

                    b.Property<int>("PeriodId");

                    b.Property<decimal>("TotalCredits")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("TotalDebits")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("KeyId");

                    b.HasIndex("AccountFk")
                        .HasName("IX_Account_FK");

                    b.HasIndex("PeriodId")
                        .HasName("IX_PeriodId");

                    b.ToTable("GL_GeneralLedger");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.GnAccountDefault", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CodeSelect")
                        .IsRequired()
                        .HasMaxLength(6);

                    b.Property<string>("CreditAccount")
                        .HasMaxLength(7);

                    b.Property<string>("DebitAccount")
                        .HasMaxLength(7);

                    b.Property<string>("Note")
                        .HasColumnName("note")
                        .HasMaxLength(500);

                    b.HasKey("KeyId");

                    b.ToTable("GN_AccountDefault");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.GnArtransactionType", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AccountName")
                        .HasMaxLength(50);

                    b.Property<string>("Description")
                        .HasMaxLength(255);

                    b.Property<string>("Id")
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.HasKey("KeyId");

                    b.ToTable("GN_ARTransactionType");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.GnCity", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("KeyId");

                    b.ToTable("GN_City");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.GnCustomerLiabilities", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("ContractAmount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("IncurredAmount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("PaidAmount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("ProjectFk")
                        .HasColumnName("Project_FK");

                    b.Property<decimal>("ReceivableAmount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("SettlementAmount")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("KeyId");

                    b.HasIndex("ProjectFk")
                        .HasName("IX_Project_FK");

                    b.ToTable("GN_CustomerLiabilities");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.GnLedger", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AccountClass")
                        .HasColumnName("Account_Class")
                        .HasColumnType("char(1)");

                    b.Property<bool?>("AccountDetail")
                        .HasColumnName("Account_Detail");

                    b.Property<string>("AccountLevel")
                        .HasColumnName("Account_Level")
                        .HasColumnType("char(1)");

                    b.Property<bool?>("AccountLiabilities")
                        .HasColumnName("Account_Liabilities");

                    b.Property<string>("AccountName")
                        .HasColumnName("Account_Name")
                        .HasMaxLength(255);

                    b.Property<string>("AccountNo")
                        .HasColumnName("Account_No")
                        .HasMaxLength(7);

                    b.Property<string>("Description")
                        .HasMaxLength(255);

                    b.Property<string>("ParentAccountNo")
                        .HasColumnName("ParentAccount_No")
                        .HasColumnType("char(7)");

                    b.HasKey("KeyId");

                    b.ToTable("GN_Ledger");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.GnNation", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("NationName")
                        .HasMaxLength(30);

                    b.HasKey("KeyId");

                    b.ToTable("GN_Nation");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.GnPaymentTerms", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("PaymentTermsName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("KeyId");

                    b.ToTable("GN_PaymentTerms");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.GnPaymentTypes", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("PaymentTypeName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("KeyId");

                    b.ToTable("GN_PaymentTypes");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.GnPeriod", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<string>("PeriodId")
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<int>("PeriodStatus");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime");

                    b.HasKey("KeyId");

                    b.ToTable("GN_Period");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.GnProduct", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("DateCreated");

                    b.Property<DateTime?>("DateModified");

                    b.Property<string>("Description")
                        .HasMaxLength(255);

                    b.Property<string>("Image")
                        .HasMaxLength(255);

                    b.Property<bool?>("IsOutsourcing");

                    b.Property<bool>("Is_simple");

                    b.Property<Guid?>("LastUpdateByFk")
                        .HasColumnName("LastUpdateBy_FK");

                    b.Property<string>("ProductCode")
                        .HasColumnName("ProductCode")
                        .HasMaxLength(15);

                    b.Property<string>("ProductName")
                        .HasColumnName("Product_Name")
                        .HasMaxLength(500);

                    b.Property<int?>("ProductTypeFK")
                        .HasColumnName("ProductTypeFK");

                    b.Property<int?>("ProductUnit")
                        .HasColumnName("Product_Unit");

                    b.Property<int>("Status");

                    b.Property<decimal>("UnitPrice");

                    b.HasKey("KeyId");

                    b.HasIndex("LastUpdateByFk")
                        .HasName("IX_LastUpdateBy_FK");

                    b.HasIndex("ProductTypeFK")
                        .HasName("IX_Product_Type");

                    b.HasIndex("ProductUnit")
                        .HasName("IX_Product_Unit");

                    b.ToTable("GN_Product");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.GnProduct_Attribute", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Code")
                        .HasMaxLength(25);

                    b.Property<string>("Name")
                        .HasMaxLength(100);

                    b.Property<bool>("is_required");

                    b.Property<bool>("is_unique");

                    b.Property<string>("note")
                        .HasMaxLength(1000);

                    b.HasKey("KeyId");

                    b.ToTable("GnProduct_Attributes");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.GnProduct_Attribute_Value", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ValueName")
                        .HasMaxLength(500);

                    b.Property<string>("code")
                        .HasMaxLength(25);

                    b.Property<int>("productAttributeFk");

                    b.HasKey("KeyId");

                    b.HasIndex("productAttributeFk");

                    b.ToTable("GnProduct_Attribute_Values");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.GnProduct_link", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Linked_product_id");

                    b.Property<int>("Product_id");

                    b.HasKey("KeyId");

                    b.HasIndex("Linked_product_id")
                        .IsUnique();

                    b.HasIndex("Product_id");

                    b.ToTable("GnProduct_Links");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.GnProduct_ProductAttribute", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Attribute_value")
                        .HasMaxLength(2000);

                    b.Property<int>("Product_AttributeFk");

                    b.Property<decimal>("price_extra");

                    b.Property<int>("product_fk");

                    b.HasKey("KeyId");

                    b.HasIndex("Product_AttributeFk");

                    b.HasIndex("product_fk");

                    b.ToTable("GnProduct_ProductAttributes");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.GnProductType", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .HasMaxLength(255);

                    b.Property<string>("Id")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<string>("ProductTypeName")
                        .HasMaxLength(50);

                    b.HasKey("KeyId");

                    b.ToTable("GN_ProductType");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.Gnproject", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConstructionId")
                        .IsRequired()
                        .HasMaxLength(25);

                    b.Property<string>("ConstructionName")
                        .HasMaxLength(500);

                    b.Property<int>("CustomerFK")
                        .HasColumnName("CustomerFK");

                    b.Property<DateTime?>("DateCreated");

                    b.Property<DateTime?>("DateModified");

                    b.Property<decimal>("EscrowAmount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<Guid?>("LastUpdatedByFk")
                        .HasColumnName("LastUpdatedBy_FK");

                    b.Property<string>("ProjectName")
                        .HasMaxLength(500);

                    b.Property<int?>("RegionFk")
                        .HasColumnName("Region_FK");

                    b.Property<int?>("SalesOrderId");

                    b.Property<int>("Status");

                    b.Property<decimal>("WarrantyAmount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime?>("WarrantyDate")
                        .HasColumnType("datetime");

                    b.HasKey("KeyId");

                    b.HasIndex("CustomerFK")
                        .HasName("IX_CustomerFK");

                    b.HasIndex("LastUpdatedByFk");

                    b.HasIndex("RegionFk")
                        .HasName("IX_Region_FK");

                    b.HasIndex("Status")
                        .HasName("IX_Status");

                    b.ToTable("GNProject");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.GnprojectDetails", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int?>("ProjectFk")
                        .HasColumnName("ProjectFK");

                    b.Property<int?>("SoFk")
                        .HasColumnName("SO_FK");

                    b.HasKey("KeyId");

                    b.HasIndex("ProjectFk")
                        .HasName("IX_ProjectFK");

                    b.ToTable("GNProjectDetails");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.GnprojectStatus", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .HasMaxLength(255);

                    b.Property<string>("SOStatusName")
                        .HasColumnName("SOStatusName")
                        .HasMaxLength(100);

                    b.Property<string>("StatusID")
                        .HasColumnName("StatusID")
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.HasKey("KeyId");

                    b.ToTable("GNProjectStatus");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.GnRegion", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("NameRegion")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("KeyId");

                    b.ToTable("GN_Region");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.GnReligion", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ReligionName")
                        .HasMaxLength(50);

                    b.HasKey("KeyId");

                    b.ToTable("GN_Religion");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.GnShipVia", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .HasMaxLength(255);

                    b.Property<string>("Id")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.HasKey("KeyId");

                    b.ToTable("GN_ShipVia");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.Group", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .HasMaxLength(500);

                    b.Property<string>("GroupName")
                        .HasMaxLength(100);

                    b.HasKey("KeyId");

                    b.ToTable("Group");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.HpAllowedVacation", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<bool?>("CommitBackToWork");

                    b.Property<DateTime?>("DateCreated");

                    b.Property<DateTime?>("DateModified");

                    b.Property<int>("EmployeeFK");

                    b.Property<DateTime?>("FromDate");

                    b.Property<int>("HandoverToFK");

                    b.Property<int>("NODate");

                    b.Property<string>("Note");

                    b.Property<double>("PercentSalary");

                    b.Property<string>("Reason");

                    b.Property<int>("StatusFK");

                    b.Property<int>("TimeKeepingTypeFK");

                    b.Property<DateTime?>("ToDate");

                    b.HasKey("KeyId");

                    b.HasIndex("EmployeeFK");

                    b.HasIndex("HandoverToFK");

                    b.HasIndex("StatusFK");

                    b.HasIndex("TimeKeepingTypeFK");

                    b.ToTable("HP_AllowedVacation");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.HpAllowedVacationStatus", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("HPStatusName");

                    b.HasKey("KeyId");

                    b.ToTable("HP_AllowedVacationStatus");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.HpBussinessApplication", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Allowance");

                    b.Property<string>("BussinessAddress");

                    b.Property<Guid>("CreatedByFK");

                    b.Property<Guid?>("CreatedByFKNavigationId");

                    b.Property<DateTime?>("DateCreated");

                    b.Property<DateTime?>("DateModified");

                    b.Property<int>("EmployeeFK");

                    b.Property<DateTime?>("FromDate");

                    b.Property<bool?>("HasHotel");

                    b.Property<bool?>("HasLeterOfIntroduction");

                    b.Property<bool?>("HasVehicles");

                    b.Property<string>("LinkHotel");

                    b.Property<string>("LinkLeterOfIntroduction");

                    b.Property<string>("LinkOthers");

                    b.Property<string>("LinkVehicles");

                    b.Property<int>("NODaysBussiness");

                    b.Property<string>("Note");

                    b.Property<string>("OrthersContent");

                    b.Property<bool?>("Others");

                    b.Property<int>("StatusFK");

                    b.Property<DateTime?>("ToDate");

                    b.HasKey("KeyId");

                    b.HasIndex("CreatedByFKNavigationId");

                    b.HasIndex("EmployeeFK");

                    b.ToTable("HP_BussinessApplication");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.HpDepartment", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("DepartmentName")
                        .HasColumnName("Department_Name")
                        .HasMaxLength(100);

                    b.Property<string>("Description")
                        .HasMaxLength(255);

                    b.HasKey("KeyId");

                    b.ToTable("HP_Department");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.HpEducationalLevel", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descriontion");

                    b.Property<string>("EducationLevelName")
                        .HasMaxLength(50);

                    b.HasKey("KeyId");

                    b.ToTable("HP_EducationalLevel");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.HpEmployee", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AccommodationCurrent")
                        .HasMaxLength(50);

                    b.Property<string>("BankAccountName")
                        .HasMaxLength(50);

                    b.Property<string>("BankAccountNumber")
                        .HasMaxLength(20);

                    b.Property<string>("BankName")
                        .HasMaxLength(100);

                    b.Property<int?>("Birthplace");

                    b.Property<DateTime?>("DateCreated");

                    b.Property<DateTime?>("DateModified");

                    b.Property<int?>("Department_FK")
                        .HasColumnName("Department_FK");

                    b.Property<string>("DistrictAC")
                        .HasMaxLength(30);

                    b.Property<string>("DistrictPR")
                        .HasMaxLength(30);

                    b.Property<int?>("EmployeeTypeFK");

                    b.Property<int?>("FamilyCircumstances");

                    b.Property<int?>("HandoverToFKNavigationKeyId");

                    b.Property<string>("IDAccount")
                        .HasMaxLength(10);

                    b.Property<DateTime?>("IDDate");

                    b.Property<string>("IDPlace")
                        .HasMaxLength(25);

                    b.Property<string>("IDSocialInsurance")
                        .HasMaxLength(15);

                    b.Property<string>("Id")
                        .HasMaxLength(15);

                    b.Property<string>("IdCard");

                    b.Property<string>("InfoContactPerson");

                    b.Property<string>("InfoSaveFile");

                    b.Property<bool?>("IsUnionMember");

                    b.Property<string>("LaborContract");

                    b.Property<int?>("LaborContractType");

                    b.Property<Guid?>("LastupdatedByFk")
                        .HasColumnName("LastupdatedBy_FK");

                    b.Property<DateTime?>("LayOffDate");

                    b.Property<int?>("LiteracyFk");

                    b.Property<int?>("NOChildren");

                    b.Property<int?>("NationFk")
                        .HasColumnName("Nation_FK");

                    b.Property<int?>("NationalityFk");

                    b.Property<string>("Note")
                        .HasMaxLength(500);

                    b.Property<string>("NumberOfContract");

                    b.Property<int?>("NumberOfDependents");

                    b.Property<string>("NumberOfProfile");

                    b.Property<int?>("OriginFk")
                        .HasColumnName("Origin_FK");

                    b.Property<string>("PermanentResidence")
                        .HasMaxLength(50);

                    b.Property<string>("PhoneNumberContactPerson");

                    b.Property<decimal?>("PositionAllowance");

                    b.Property<int?>("PositionFk")
                        .HasColumnName("Position_FK");

                    b.Property<int?>("ProvinceACFk");

                    b.Property<int?>("ProvincePRFk");

                    b.Property<int?>("ReligionFk")
                        .HasColumnName("Religion_FK");

                    b.Property<decimal>("Salary");

                    b.Property<decimal>("SalarySocialInsurance");

                    b.Property<decimal?>("SeniorityAllowances");

                    b.Property<DateTime?>("SignContractDate");

                    b.Property<DateTime?>("SocialInsuranceDate");

                    b.Property<DateTime?>("StartDate");

                    b.Property<int>("Status");

                    b.Property<string>("TaxIdnumber")
                        .HasColumnName("TaxIDNumber")
                        .HasMaxLength(15);

                    b.Property<DateTime?>("TimeExpireContract");

                    b.Property<DateTime?>("TimeExpireProbation");

                    b.Property<decimal?>("TravelAllowance");

                    b.Property<Guid?>("User_FK");

                    b.Property<int?>("WorkingGroupFk");

                    b.HasKey("KeyId");

                    b.HasIndex("Department_FK")
                        .HasName("IX_Department_FK");

                    b.HasIndex("EmployeeTypeFK");

                    b.HasIndex("HandoverToFKNavigationKeyId");

                    b.HasIndex("LastupdatedByFk");

                    b.HasIndex("LiteracyFk");

                    b.HasIndex("NationFk")
                        .HasName("IX_Nation_FK");

                    b.HasIndex("NationalityFk");

                    b.HasIndex("PositionFk")
                        .HasName("IX_Position_FK");

                    b.HasIndex("ProvinceACFk");

                    b.HasIndex("ProvincePRFk");

                    b.HasIndex("ReligionFk")
                        .HasName("IX_Religion_FK");

                    b.HasIndex("User_FK")
                        .IsUnique();

                    b.HasIndex("WorkingGroupFk");

                    b.ToTable("HP_Employee");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.HpEmployeeLog", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ChangeCode");

                    b.Property<string>("ChangeContent");

                    b.Property<DateTime>("ChangeDate");

                    b.Property<int>("ChangeDepartmentFK");

                    b.Property<int>("ChangeWorkingGroupFK");

                    b.HasKey("KeyId");

                    b.HasIndex("ChangeDepartmentFK");

                    b.HasIndex("ChangeWorkingGroupFK");

                    b.ToTable("HP_EmployeeLog");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.HpEmployeeType", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("Name")
                        .HasMaxLength(25);

                    b.HasKey("KeyId");

                    b.ToTable("HpEmployeeTypes");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.HpEnterprise", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("EnterpriseName")
                        .HasMaxLength(25);

                    b.HasKey("KeyId");

                    b.ToTable("HP_Enterprise");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.HpExpertiseDetail", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("DegreeFK");

                    b.Property<int>("EmployeeFK");

                    b.Property<int?>("MajorFK");

                    b.Property<int?>("TrainingSystemFK");

                    b.HasKey("KeyId");

                    b.HasIndex("DegreeFK");

                    b.HasIndex("EmployeeFK");

                    b.HasIndex("MajorFK");

                    b.HasIndex("TrainingSystemFK");

                    b.ToTable("HP_ExpertiseDetail");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.HpFamilyCircumstancesDetail", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<bool?>("Died");

                    b.Property<int>("EmployeeFK");

                    b.Property<int?>("Gender");

                    b.Property<string>("Job")
                        .HasMaxLength(30);

                    b.Property<string>("Relationship")
                        .HasMaxLength(8);

                    b.Property<string>("RelativesName")
                        .HasMaxLength(35);

                    b.Property<int>("YearOfBirth");

                    b.HasKey("KeyId");

                    b.HasIndex("EmployeeFK");

                    b.ToTable("HP_FamilyCircumstancesDetail");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.HpIncomTaxList", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal?>("CloseBelow");

                    b.Property<decimal?>("CloseUpper");

                    b.Property<string>("IncomeID")
                        .HasMaxLength(4);

                    b.Property<string>("IncomeName")
                        .HasMaxLength(30);

                    b.Property<decimal?>("Subtract");

                    b.Property<int>("Tax");

                    b.HasKey("KeyId");

                    b.ToTable("HP_IncomeTaxList");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.HpLanguage", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("LanguageName")
                        .HasMaxLength(20);

                    b.HasKey("KeyId");

                    b.ToTable("HP_Language");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.HpLanguageDetail", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Certificate")
                        .HasMaxLength(25);

                    b.Property<int>("EmployeeFK");

                    b.Property<int?>("LanguageFK");

                    b.Property<int?>("LevelFK");

                    b.Property<int?>("LevelFKNavigationKeyId");

                    b.HasKey("KeyId");

                    b.HasIndex("EmployeeFK");

                    b.HasIndex("LanguageFK");

                    b.HasIndex("LevelFKNavigationKeyId");

                    b.ToTable("HP_LanguageDetail");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.HpMajor", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("MajorName")
                        .HasMaxLength(50);

                    b.HasKey("KeyId");

                    b.ToTable("HP_Major");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.HpNationality", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("NationalityName")
                        .HasMaxLength(20);

                    b.HasKey("KeyId");

                    b.ToTable("HP_Nationality");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.HpPermitDays", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("EmployeeFK");

                    b.Property<int>("NODaysRemain");

                    b.Property<int>("NODaysUsed");

                    b.Property<int>("NOPermitDays");

                    b.Property<int>("Year");

                    b.HasKey("KeyId");

                    b.HasIndex("EmployeeFK");

                    b.ToTable("HP_PermitDays");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.HpPosition", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .HasMaxLength(500);

                    b.Property<string>("PositionName")
                        .HasMaxLength(100);

                    b.HasKey("KeyId");

                    b.ToTable("HP_Position");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.HpQualification", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("QualificationName")
                        .HasMaxLength(25);

                    b.HasKey("KeyId");

                    b.ToTable("HP_Qualification");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.HpQuota", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("QuotaID")
                        .HasMaxLength(10);

                    b.Property<string>("QuotaName")
                        .HasMaxLength(45);

                    b.HasKey("KeyId");

                    b.ToTable("HpQuotas");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.HpRank", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<double?>("CoefficientsSalary");

                    b.Property<string>("Description");

                    b.Property<int>("QuotaFK");

                    b.Property<string>("RankName")
                        .HasMaxLength(50);

                    b.HasKey("KeyId");

                    b.HasIndex("QuotaFK");

                    b.ToTable("HP_Rank");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.HpSalary", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal?>("Allowance");

                    b.Property<DateTime?>("DateCreated");

                    b.Property<DateTime?>("DateModified");

                    b.Property<decimal?>("DeductionAmountDayOff");

                    b.Property<int>("EmployeeFK");

                    b.Property<decimal?>("FamilyAllowances");

                    b.Property<decimal?>("HealthInsurance");

                    b.Property<decimal?>("IncomeTax");

                    b.Property<int>("Month");

                    b.Property<double?>("NOHoursOvertime");

                    b.Property<decimal?>("OvertimeSalary");

                    b.Property<decimal?>("RealSalary");

                    b.Property<decimal?>("Remain");

                    b.Property<decimal?>("SocialInsurance");

                    b.Property<decimal?>("TaxableIncome");

                    b.Property<int>("TotalAnnualLeave");

                    b.Property<int>("TotalPrivateNo");

                    b.Property<decimal?>("TotalSalary");

                    b.Property<int>("TotalSalaryDays");

                    b.Property<int>("TotalWorkDay");

                    b.Property<double?>("TotalWorkDayOT");

                    b.Property<decimal?>("UnemploymentInsurance");

                    b.Property<decimal?>("UnionFee");

                    b.Property<int>("Year");

                    b.HasKey("KeyId");

                    b.HasIndex("EmployeeFK");

                    b.ToTable("HP_Salary");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.HpSalaryDetail", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal?>("AmountInscrease");

                    b.Property<int>("EmployeeFK");

                    b.Property<DateTime?>("FluctuationsDate");

                    b.Property<string>("Note")
                        .HasMaxLength(255);

                    b.Property<double?>("PercentInscrease");

                    b.Property<decimal?>("SalaryAfterInscrease");

                    b.Property<decimal?>("SalaryBeforeInscrease");

                    b.HasKey("KeyId");

                    b.HasIndex("EmployeeFK");

                    b.ToTable("HP_SalaryDetail");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.HpScoreEmployee", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("Date");

                    b.Property<DateTime?>("DateCreated");

                    b.Property<DateTime?>("DateModified");

                    b.Property<int>("EmployeeFK");

                    b.Property<string>("HoursIn");

                    b.Property<string>("HoursOut");

                    b.Property<double?>("NOWorkHours");

                    b.Property<string>("Note");

                    b.Property<double?>("OverTime");

                    b.Property<int?>("TimeKeepingTypeFK");

                    b.Property<double?>("Work");

                    b.Property<double?>("WorkOT");

                    b.HasKey("KeyId");

                    b.HasIndex("EmployeeFK");

                    b.HasIndex("TimeKeepingTypeFK");

                    b.ToTable("HP_ScoreEmployee");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.HpTimekeepingType", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<bool?>("GetBasicSalary");

                    b.Property<double?>("GetPaidRate");

                    b.Property<string>("TimekeepingTypeName")
                        .HasMaxLength(200);

                    b.HasKey("KeyId");

                    b.ToTable("HP_TimekeepingType");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.HpTrainingSystem", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("TrainingSystemName")
                        .HasMaxLength(20);

                    b.HasKey("KeyId");

                    b.ToTable("HP_TrainingSystem");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.HpWorkingGroup", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("WorkingGroupName")
                        .HasMaxLength(25);

                    b.HasKey("KeyId");

                    b.ToTable("HP_WorkingGroup");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.HpWorkingProcessDetail", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CurrentPosition")
                        .HasMaxLength(20);

                    b.Property<string>("CurrentWorkPlace")
                        .HasMaxLength(25);

                    b.Property<int>("EmployeeFK");

                    b.Property<DateTime?>("MobilizeDate");

                    b.Property<string>("NumberDesignation")
                        .HasMaxLength(15);

                    b.Property<string>("OldPosition")
                        .HasMaxLength(20);

                    b.Property<string>("OldWorkPlace")
                        .HasMaxLength(25);

                    b.HasKey("KeyId");

                    b.HasIndex("EmployeeFK");

                    b.ToTable("HP_WorkingProcessDetail");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.IcCategory", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CategoryText")
                        .HasMaxLength(50);

                    b.Property<string>("Id")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<int?>("Status");

                    b.HasKey("KeyId");

                    b.ToTable("IC_Category");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.IcInventory", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("AverageCost");

                    b.Property<DateTime?>("DateCreated");

                    b.Property<DateTime?>("DateModified");

                    b.Property<int?>("EOQ");

                    b.Property<bool?>("FixedAsset");

                    b.Property<string>("GL_Asset")
                        .HasMaxLength(10);

                    b.Property<string>("GL_COGS")
                        .HasMaxLength(10);

                    b.Property<string>("GL_NonTaxSales")
                        .HasMaxLength(10);

                    b.Property<string>("GL_Sales")
                        .HasMaxLength(10);

                    b.Property<double?>("Height");

                    b.Property<int?>("IcCategoryKeyId");

                    b.Property<int?>("IcUnitKeyId");

                    b.Property<string>("Id")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<decimal>("LastCost");

                    b.Property<DateTime?>("LastPODate");

                    b.Property<DateTime?>("LastReceiptDate");

                    b.Property<DateTime?>("LastSaleDate");

                    b.Property<Guid?>("LastUpdateByFk")
                        .HasColumnName("LastUpdateBy_FK");

                    b.Property<int?>("LeadTime");

                    b.Property<double?>("Length");

                    b.Property<string>("Location")
                        .HasMaxLength(100);

                    b.Property<int?>("ProductFk")
                        .HasColumnName("Product_FK");

                    b.Property<int?>("Qty_Allocated");

                    b.Property<int?>("Qty_In_Stock");

                    b.Property<int?>("Qty_On_Hand");

                    b.Property<int?>("Qty_On_Order");

                    b.Property<int?>("ROP");

                    b.Property<int?>("SafetyStock");

                    b.Property<int>("Status");

                    b.Property<double?>("TaxRate")
                        .HasColumnName("Tax_Rate");

                    b.Property<decimal>("TotalInventoryValue");

                    b.Property<decimal?>("UnitPrice");

                    b.Property<int?>("VendorNumberFk")
                        .HasColumnName("VendorNumber_FK");

                    b.Property<int?>("WarehouseFk")
                        .HasColumnName("Warehouse_FK");

                    b.Property<double?>("Width");

                    b.HasKey("KeyId");

                    b.HasIndex("IcCategoryKeyId");

                    b.HasIndex("IcUnitKeyId");

                    b.HasIndex("LastUpdateByFk")
                        .HasName("IX_LastUpdateBy_FK");

                    b.HasIndex("ProductFk")
                        .HasName("IX_Product_FK");

                    b.HasIndex("VendorNumberFk")
                        .HasName("IX_VendorNumber_FK");

                    b.HasIndex("WarehouseFk")
                        .HasName("IX_Warehouse_FK");

                    b.ToTable("IC_Inventory");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.IcInventoryCustomerPrice", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CustomerFk");

                    b.Property<string>("CustomerId");

                    b.Property<string>("CustomerName");

                    b.Property<int>("InventoryFk");

                    b.Property<decimal?>("UnitPrice");

                    b.HasKey("KeyId");

                    b.HasIndex("CustomerFk");

                    b.HasIndex("InventoryFk");

                    b.ToTable("IC_InventoryCustomerPrice");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.IcUnit", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("DateCreated");

                    b.Property<DateTime?>("DateModified");

                    b.Property<double?>("Factor");

                    b.Property<Guid?>("LastUpdatedBy");

                    b.Property<int?>("Rounding");

                    b.Property<int>("Status");

                    b.Property<int?>("UnitCategoryFk")
                        .HasColumnName("UnitCategory_FK");

                    b.Property<string>("UnitName")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.HasKey("KeyId");

                    b.HasIndex("LastUpdatedBy")
                        .HasName("IX_LastUpdatedBy");

                    b.HasIndex("UnitCategoryFk")
                        .HasName("IX_UnitCategory_FK");

                    b.ToTable("IC_Unit");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.IcUnitCategory", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("DateCreated");

                    b.Property<DateTime?>("DateModified");

                    b.Property<Guid?>("LastUpdatedBy");

                    b.Property<int>("Status");

                    b.Property<string>("UnitCategoryDescription")
                        .HasMaxLength(255);

                    b.Property<string>("UnitCategoryName")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.HasKey("KeyId");

                    b.HasIndex("LastUpdatedBy")
                        .HasName("IX_LastUpdatedBy");

                    b.ToTable("IC_UnitCategory");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.IcWarehouse", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Id")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<int?>("Status");

                    b.Property<string>("WarehouseAddress")
                        .HasMaxLength(100);

                    b.Property<string>("WarehouseName")
                        .HasMaxLength(50);

                    b.HasKey("KeyId");

                    b.ToTable("IC_Warehouse");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.MrpBom", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BomofTotalRefFk")
                        .HasColumnName("BOMofTotalRef_FK");

                    b.Property<int?>("ProductBomFk")
                        .HasColumnName("ProductBOM_FK");

                    b.Property<int?>("ProductFk")
                        .HasColumnName("Product_FK");

                    b.Property<double?>("ProductQty")
                        .HasColumnName("Product_Qty");

                    b.Property<Guid?>("UserId");

                    b.HasKey("KeyId");

                    b.HasIndex("ProductBomFk")
                        .HasName("IX_ProductBOM_FK");

                    b.HasIndex("ProductFk")
                        .HasName("IX_Product_FK");

                    b.HasIndex("UserId");

                    b.ToTable("MRP_BOM");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.Permission", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("CanConfirm");

                    b.Property<bool>("CanCreate");

                    b.Property<bool>("CanDelete");

                    b.Property<bool>("CanRead");

                    b.Property<bool>("CanUpdate");

                    b.Property<string>("FunctionId")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.Property<Guid>("RoleId");

                    b.HasKey("KeyId");

                    b.HasIndex("FunctionId");

                    b.HasIndex("RoleId");

                    b.ToTable("Permissions");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.PoAccountPayable", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("ApNo")
                        .HasColumnName("AP_No")
                        .HasMaxLength(7)
                        .IsUnicode(false);

                    b.Property<string>("ConstructionId")
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.Property<string>("Description");

                    b.Property<int>("PoNo")
                        .HasColumnName("PO_No");

                    b.Property<string>("RecordCode")
                        .HasColumnName("Record_Code")
                        .HasMaxLength(2);

                    b.Property<DateTime?>("TransactDate")
                        .HasColumnName("Transact_Date")
                        .HasColumnType("datetime");

                    b.Property<int>("TransactionNo")
                        .HasColumnName("Transaction_No");

                    b.Property<int?>("VendorFk")
                        .HasColumnName("Vendor_FK");

                    b.HasKey("KeyId");

                    b.HasIndex("VendorFk")
                        .HasName("IX_Vendor_FK");

                    b.ToTable("PO_AccountPayable");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.PoAccountsPayableAdjustments", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<Guid?>("AuthorizedBy")
                        .HasColumnName("Authorized_By");

                    b.Property<string>("CreditAccount")
                        .HasColumnName("Credit_Account")
                        .HasMaxLength(7);

                    b.Property<string>("DebitAccount")
                        .HasColumnName("Debit_Account")
                        .HasMaxLength(7);

                    b.Property<DateTime?>("InvoiceDate")
                        .HasColumnName("Invoice_Date")
                        .HasColumnType("datetime");

                    b.Property<int?>("InvoiceNo")
                        .HasColumnName("Invoice_No");

                    b.Property<string>("TransactionId")
                        .HasColumnName("Transaction_ID")
                        .HasMaxLength(2);

                    b.Property<int?>("VendorFk")
                        .HasColumnName("Vendor_FK");

                    b.Property<DateTime>("VoucherDate")
                        .HasColumnName("Voucher_Date")
                        .HasColumnType("datetime");

                    b.Property<string>("VoucherNo")
                        .HasColumnName("Voucher_No")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.HasKey("KeyId");

                    b.HasIndex("AuthorizedBy")
                        .HasName("IX_Authorized_By");

                    b.HasIndex("VendorFk")
                        .HasName("IX_Vendor_FK");

                    b.ToTable("PO_AccountsPayableAdjustments");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.PoApinvoices", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .HasMaxLength(255);

                    b.Property<decimal>("DiscountAmount")
                        .HasColumnName("Discount_Amount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnName("Due_Date")
                        .HasColumnType("datetime");

                    b.Property<decimal>("InvoiceAmount")
                        .HasColumnName("Invoice_Amount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime?>("InvoiceDate")
                        .HasColumnName("Invoice_Date")
                        .HasColumnType("datetime");

                    b.Property<int>("InvoiceNo")
                        .HasColumnName("Invoice_No");

                    b.Property<bool>("Paid");

                    b.Property<DateTime?>("PoDate")
                        .HasColumnName("PO_Date")
                        .HasColumnType("datetime");

                    b.Property<int>("PoId")
                        .HasColumnName("PO_ID");

                    b.Property<int>("VendorFk")
                        .HasColumnName("Vendor_FK");

                    b.HasKey("KeyId");

                    b.HasIndex("VendorFk")
                        .HasName("IX_Vendor_FK");

                    b.ToTable("PO_APInvoices");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.PoApinvoicesDetail", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("InventoryFk")
                        .HasColumnName("Inventory_FK")
                        .IsUnicode(false);

                    b.Property<int>("InvoiceFk")
                        .HasColumnName("Invoice_FK");

                    b.Property<double?>("QtyOrdered")
                        .HasColumnName("Qty_Ordered");

                    b.Property<decimal>("SubTotal")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int?>("UnitFk")
                        .HasColumnName("Unit_FK");

                    b.HasKey("KeyId");

                    b.HasIndex("InvoiceFk")
                        .HasName("IX_Invoice_FK");

                    b.ToTable("PO_APInvoicesDetail");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.PoCashDisbursement", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("CheckAmount")
                        .HasColumnName("Check_Amount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("CheckNo")
                        .HasColumnName("Check_No")
                        .HasMaxLength(15);

                    b.Property<string>("CreditAccount")
                        .HasMaxLength(7);

                    b.Property<string>("DebitAccount")
                        .HasMaxLength(7);

                    b.Property<string>("Description")
                        .HasMaxLength(255);

                    b.Property<string>("DisbursementType")
                        .HasColumnName("Disbursement_Type")
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<decimal>("DiscountAmt")
                        .HasColumnName("Discount_Amt")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("GrossInvAmt")
                        .HasColumnName("Gross_Inv_Amt")
                        .HasColumnType("decimal(65,30)");

                    b.Property<bool?>("Payment");

                    b.Property<DateTime?>("PoCashDisbDate")
                        .HasColumnName("PO_CashDisb_Date")
                        .HasColumnType("datetime");

                    b.Property<string>("PoCashDisbNo")
                        .HasColumnName("PO_CashDisb_No")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<int>("VendorFk")
                        .HasColumnName("Vendor_FK");

                    b.HasKey("KeyId");

                    b.HasIndex("VendorFk")
                        .HasName("IX_Vendor_FK");

                    b.ToTable("PO_CashDisbursement");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.PoCashDisbursementDetail", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("InvoiceAmount")
                        .HasColumnName("Invoice_Amount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime?>("InvoiceDate")
                        .HasColumnName("Invoice_Date")
                        .HasColumnType("datetime");

                    b.Property<int?>("InvoiceFk")
                        .HasColumnName("Invoice_FK");

                    b.Property<int>("PoCashDisbNoFk")
                        .HasColumnName("PO_CashDisb_No_FK");

                    b.HasKey("KeyId");

                    b.HasIndex("PoCashDisbNoFk")
                        .HasName("IX_PO_CashDisb_No_FK");

                    b.ToTable("PO_CashDisbursementDetail");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.PoNotification", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BillOfLoadingNo")
                        .HasColumnName("BillOf_Loading_No");

                    b.Property<DateTime?>("InvoiceDate")
                        .HasColumnName("Invoice_Date")
                        .HasColumnType("datetime");

                    b.Property<int?>("InvoiceNo")
                        .HasColumnName("Invoice_No");

                    b.Property<DateTime?>("NotificationDate")
                        .HasColumnName("Notification_date")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("NotificationLastUpdate")
                        .HasColumnName("Notification_LastUpdate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("PoDate")
                        .HasColumnName("PO_Date")
                        .HasColumnType("datetime");

                    b.Property<int?>("PoId")
                        .HasColumnName("PO_ID");

                    b.Property<int?>("ReceiverFk")
                        .HasColumnName("Receiver_FK");

                    b.Property<DateTime?>("ShipDate")
                        .HasColumnName("Ship_Date")
                        .HasColumnType("datetime");

                    b.Property<string>("ShipNo")
                        .HasColumnName("Ship_No");

                    b.Property<int>("StattusCode");

                    b.Property<int?>("VendorFk")
                        .HasColumnName("Vendor_FK");

                    b.HasKey("KeyId");

                    b.ToTable("PO_Notification");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.PoOrderStatus", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .HasMaxLength(255);

                    b.Property<string>("PostatusId")
                        .HasColumnName("POStatus_ID")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("PostatusText")
                        .HasColumnName("POStatusText")
                        .HasMaxLength(50);

                    b.HasKey("KeyId");

                    b.ToTable("PO_OrderStatus");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.PoPurchaseOrder", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BuyerFk")
                        .HasColumnName("Buyer_FK");

                    b.Property<DateTime?>("DateCreated");

                    b.Property<DateTime?>("DateModified");

                    b.Property<string>("Description")
                        .HasMaxLength(255);

                    b.Property<string>("FinishTime")
                        .HasMaxLength(255);

                    b.Property<string>("IncotermId")
                        .HasColumnName("Incoterm_ID")
                        .HasMaxLength(255);

                    b.Property<Guid?>("LastUpdateBy_FK");

                    b.Property<decimal>("PO_Amount")
                        .HasColumnName("PO_Amount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("PO_AmountB2")
                        .HasColumnName("PO_Amount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("PaymentTerm")
                        .HasMaxLength(2000);

                    b.Property<DateTime?>("PoDate")
                        .HasColumnName("PO_Date")
                        .HasColumnType("datetime");

                    b.Property<string>("PoId")
                        .HasColumnName("PO_ID")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<string>("Ponumber")
                        .HasColumnName("PONumber")
                        .HasMaxLength(25);

                    b.Property<int>("PostatusFk")
                        .HasColumnName("POStatus_FK")
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.Property<string>("ProjectName")
                        .HasMaxLength(700);

                    b.Property<string>("ShippingAddress")
                        .HasMaxLength(500);

                    b.Property<int>("SoFk");

                    b.Property<double?>("TaxRate");

                    b.Property<decimal>("Tax_Amount");

                    b.Property<decimal>("Tax_AmountB2");

                    b.Property<decimal>("Total_Amount");

                    b.Property<decimal>("Total_AmountB2");

                    b.Property<int?>("VendorFk")
                        .HasColumnName("Vendor_FK");

                    b.Property<string>("WarrantyPeriod")
                        .HasMaxLength(255);

                    b.HasKey("KeyId");

                    b.HasIndex("BuyerFk")
                        .HasName("IX_Buyer_FK");

                    b.HasIndex("LastUpdateBy_FK");

                    b.HasIndex("PostatusFk")
                        .HasName("IX_POStatus_FK");

                    b.HasIndex("VendorFk")
                        .HasName("IX_Vendor_FK");

                    b.ToTable("PO_PurchaseOrder");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.PoPurchaseOrderBom", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Code")
                        .HasMaxLength(25);

                    b.Property<string>("Description")
                        .HasMaxLength(255);

                    b.Property<string>("Name")
                        .HasMaxLength(500);

                    b.Property<string>("Note")
                        .HasMaxLength(1000);

                    b.Property<int>("PoDetailFf");

                    b.Property<decimal>("PriceB2");

                    b.Property<double>("QtyOrder");

                    b.Property<decimal>("SubTotal");

                    b.Property<double>("TotalQtyB2");

                    b.Property<double>("TotalQtyOrdered");

                    b.Property<int?>("UnitFK");

                    b.Property<string>("UnitName")
                        .HasMaxLength(20);

                    b.HasKey("KeyId");

                    b.HasIndex("PoDetailFf");

                    b.ToTable("PoPurchaseOrderBoms");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.PoPurchaseOrderBomDetail", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BomDetaiFK")
                        .HasMaxLength(25);

                    b.Property<string>("NameBomDetail")
                        .HasMaxLength(500);

                    b.Property<string>("Note")
                        .HasMaxLength(1000);

                    b.Property<decimal>("PriceB2");

                    b.Property<int>("PurchaseOrderBomFK");

                    b.Property<double>("QtyB2");

                    b.Property<double>("QtyOrder");

                    b.Property<decimal>("SubTotal");

                    b.Property<int?>("UnitFK");

                    b.Property<string>("UnitName")
                        .HasMaxLength(20);

                    b.HasKey("KeyId");

                    b.HasIndex("PurchaseOrderBomFK");

                    b.ToTable("PoPurchaseOrderBomDetails");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.PoPurchaseOrderDetail", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Code")
                        .HasMaxLength(25);

                    b.Property<string>("Description")
                        .HasMaxLength(255);

                    b.Property<string>("Name")
                        .HasMaxLength(500);

                    b.Property<string>("Note")
                        .HasMaxLength(1000);

                    b.Property<int>("PoFk")
                        .HasColumnName("PO_FK");

                    b.Property<double>("QtyOrder")
                        .HasColumnName("Qty_Ordered");

                    b.Property<decimal>("SubTotalOrder")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("SubTotalOrderB2")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int?>("UnitFk")
                        .HasColumnName("Unit_FK");

                    b.Property<string>("UnitName")
                        .HasMaxLength(20);

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("KeyId");

                    b.HasIndex("PoFk")
                        .HasName("IX_PO_FK");

                    b.ToTable("PO_PurchaseOrderDetail");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.PoRecOrderDetail", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("InventoryFk")
                        .HasColumnName("Inventory_FK");

                    b.Property<double?>("QtyOrdered")
                        .HasColumnName("Qty_Ordered");

                    b.Property<double?>("QtyReceived")
                        .HasColumnName("Qty_Received");

                    b.Property<int>("RrnoFk")
                        .HasColumnName("RRNo_FK");

                    b.Property<int>("UnitFk")
                        .HasColumnName("UnitFK");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("KeyId");

                    b.HasIndex("RrnoFk")
                        .HasName("IX_RRNo_FK");

                    b.ToTable("PO_RecOrderDetail");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.PoRecReport", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BillOfLoadingNo")
                        .HasColumnName("BillOf_Loading_No")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<Guid?>("CreatedByFk")
                        .HasColumnName("CreatedBy_FK");

                    b.Property<bool?>("Inactive");

                    b.Property<DateTime?>("InvoiceDate")
                        .HasColumnName("Invoice_Date")
                        .HasColumnType("datetime");

                    b.Property<int?>("InvoiceNo")
                        .HasColumnName("Invoice_No");

                    b.Property<decimal>("PoAmount")
                        .HasColumnName("PO_Amount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime?>("PoDate")
                        .HasColumnName("PO_Date")
                        .HasColumnType("datetime");

                    b.Property<int?>("PoFk")
                        .HasColumnName("PO_FK");

                    b.Property<int>("ReceiverFk")
                        .HasColumnName("Receiver_FK");

                    b.Property<DateTime?>("Rrdate")
                        .HasColumnName("RRDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Rrno")
                        .HasColumnName("RRNo")
                        .HasMaxLength(15);

                    b.Property<int?>("VendorFk")
                        .HasColumnName("Vendor_FK");

                    b.Property<bool?>("Warehoused");

                    b.HasKey("KeyId");

                    b.HasIndex("CreatedByFk")
                        .HasName("IX_CreatedBy_FK");

                    b.HasIndex("ReceiverFk")
                        .HasName("IX_Receiver_FK");

                    b.HasIndex("VendorFk")
                        .HasName("IX_Vendor_FK");

                    b.ToTable("PO_RecReport");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.PoVendor", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("ApBalance")
                        .HasColumnName("AP_Balance")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime?>("DateCreated");

                    b.Property<DateTime?>("DateModified");

                    b.Property<string>("Id")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<DateTime?>("LastPaymentDate")
                        .HasColumnName("Last_Payment_Date")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("LastPurchaseDate")
                        .HasColumnName("Last_Purchase_Date")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("LastUpdatedFk");

                    b.Property<decimal>("LyrPurchase")
                        .HasColumnName("LYR_Purchase")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("MtdPurchase")
                        .HasColumnName("MTD_Purchase")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Notes")
                        .HasMaxLength(255);

                    b.Property<decimal>("OutstandCredit")
                        .HasColumnName("Outstand_Credit")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("OutstandInvAmt")
                        .HasColumnName("Outstand_Inv_Amt")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int?>("PerformanceRating")
                        .HasColumnName("Performance_Rating");

                    b.Property<int>("Status");

                    b.Property<Guid?>("UserFk");

                    b.Property<decimal>("YtdPurchase")
                        .HasColumnName("YTD_Purchase")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("KeyId");

                    b.HasIndex("LastUpdatedFk");

                    b.HasIndex("UserFk")
                        .IsUnique();

                    b.ToTable("PO_Vendor");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp");

                    b.Property<string>("Description")
                        .HasMaxLength(250);

                    b.Property<string>("Name");

                    b.Property<string>("NormalizedName");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.SoAcceptance", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AcceptanceId")
                        .HasColumnName("Acceptance_ID")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("AcceptanceStatusFk")
                        .HasColumnName("AcceptanceStatus_FK");

                    b.Property<Guid?>("CreatePaymentByFk")
                        .HasColumnName("CreatePaymentBy_FK");

                    b.Property<DateTime?>("DateCreated");

                    b.Property<DateTime?>("DateModified");

                    b.Property<Guid?>("EngineerFk")
                        .HasColumnName("Engineer_FK");

                    b.Property<string>("Id")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<DateTime?>("LastUpdatePaymentDate")
                        .HasColumnName("LastUpdatePayment_Date")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnName("Payment_Date")
                        .HasColumnType("datetime");

                    b.Property<string>("PaymentId")
                        .HasColumnName("Payment_ID")
                        .HasMaxLength(15);

                    b.Property<int?>("PaymentPeriod");

                    b.Property<int?>("PaymentStatusFk")
                        .HasColumnName("PaymentStatus_FK");

                    b.Property<int?>("SoFk")
                        .HasColumnName("SO_FK");

                    b.Property<int?>("SostatusFk")
                        .HasColumnName("SOStatus_FK");

                    b.Property<decimal>("Total");

                    b.HasKey("KeyId");

                    b.HasIndex("AcceptanceStatusFk")
                        .HasName("IX_AcceptanceStatus_FK");

                    b.HasIndex("CreatePaymentByFk")
                        .HasName("IX_CreatePaymentBy_FK");

                    b.HasIndex("EngineerFk")
                        .HasName("IX_Engineer_FK");

                    b.HasIndex("PaymentStatusFk")
                        .HasName("IX_PaymentStatus_FK");

                    b.HasIndex("SoFk")
                        .HasName("IX_SO_FK");

                    b.HasIndex("SostatusFk")
                        .HasName("IX_SOStatus_FK");

                    b.ToTable("SO_Acceptance");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.SoAcceptanceDetail", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AcceptanceFk")
                        .HasColumnName("Acceptance_FK");

                    b.Property<decimal>("AccumulatedLastBillAcc")
                        .HasColumnType("decimal(65,30)");

                    b.Property<double?>("AccumulatedLastQtyAcc");

                    b.Property<decimal>("AccumulatedNowBillAcc")
                        .HasColumnType("decimal(65,30)");

                    b.Property<double?>("AccumulatedNowQtyAcc");

                    b.Property<int?>("OrderDetailFk")
                        .HasColumnName("OrderDetail_FK");

                    b.Property<double?>("QtyAcceptanceNow");

                    b.Property<double?>("QtyOrdered");

                    b.Property<decimal>("Subtotal")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int?>("UnitFk")
                        .HasColumnName("Unit_FK");

                    b.Property<string>("UnitName")
                        .HasColumnName("Unit_Name");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("KeyId");

                    b.HasIndex("AcceptanceFk")
                        .HasName("IX_Acceptance_FK");

                    b.HasIndex("OrderDetailFk")
                        .HasName("IX_OrderDetail_FK");

                    b.HasIndex("UnitFk")
                        .HasName("IX_Unit_FK");

                    b.ToTable("SO_AcceptanceDetail");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.SoAcceptanceStatus", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .HasMaxLength(255);

                    b.Property<string>("Id")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<string>("SOStatusName")
                        .HasColumnName("SOStatusName")
                        .HasMaxLength(50);

                    b.HasKey("KeyId");

                    b.ToTable("SO_AcceptanceStatus");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.SoCustomer", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("CreditLimit")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("CustomerType");

                    b.Property<DateTime?>("DateCreated");

                    b.Property<DateTime?>("DateModified");

                    b.Property<string>("EvaluatedCustomer")
                        .HasMaxLength(255);

                    b.Property<string>("Id")
                        .HasMaxLength(15);

                    b.Property<DateTime?>("LastRevisedCreditLimitDate")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("LastUpdatedByFk")
                        .HasColumnName("LastUpdatedBy_FK");

                    b.Property<string>("Notes")
                        .HasMaxLength(255);

                    b.Property<int>("QtyContructions");

                    b.Property<int>("Status");

                    b.Property<Guid?>("UserFk");

                    b.HasKey("KeyId");

                    b.HasIndex("LastUpdatedByFk")
                        .HasName("IX_LastUpdatedBy_FK");

                    b.HasIndex("UserFk")
                        .IsUnique();

                    b.ToTable("SO_Customer");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.SoNotification", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("AcceptanceDate")
                        .HasColumnName("Acceptance_Date")
                        .HasColumnType("datetime");

                    b.Property<int?>("AcceptanceFk")
                        .HasColumnName("Acceptance_FK");

                    b.Property<int?>("CreatePaymentByFk")
                        .HasColumnName("CreatePaymentBy_FK");

                    b.Property<int>("CustomerFK")
                        .HasColumnName("Customer_FK");

                    b.Property<int?>("EngineerFk")
                        .HasColumnName("Engineer_FK");

                    b.Property<int?>("InvoiceNo")
                        .HasColumnName("Invoice_No");

                    b.Property<DateTime?>("NotificationDate")
                        .HasColumnName("Notification_Date")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("NotificationLastUpdate")
                        .HasColumnName("Notification_LastUpdate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnName("Payment_Date")
                        .HasColumnType("datetime");

                    b.Property<int?>("PaymentFk")
                        .HasColumnName("Payment_FK");

                    b.Property<int?>("PaymentStatusFk")
                        .HasColumnName("PaymentStatus_FK");

                    b.Property<int>("SoId")
                        .HasColumnName("SO_ID");

                    b.Property<DateTime>("Sodate")
                        .HasColumnName("SODate")
                        .HasColumnType("datetime");

                    b.HasKey("KeyId");

                    b.HasIndex("AcceptanceFk")
                        .HasName("IX_Acceptance_FK");

                    b.HasIndex("CustomerFK")
                        .HasName("IX_Customer_FK");

                    b.HasIndex("InvoiceNo")
                        .HasName("IX_Invoice_No");

                    b.HasIndex("PaymentStatusFk")
                        .HasName("IX_PaymentStatus_FK");

                    b.HasIndex("SoId")
                        .HasName("IX_SO_ID");

                    b.ToTable("SO_Notification");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.SoNotificationGeneral", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("DateCreated");

                    b.Property<DateTime?>("DateModified");

                    b.Property<string>("NotificationContent")
                        .HasMaxLength(500);

                    b.Property<int?>("Referent");

                    b.HasKey("KeyId");

                    b.ToTable("SO_NotificationGeneral");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.SoNotificationGeneralDetail", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("NotificationFk")
                        .HasColumnName("Notification_FK");

                    b.Property<int>("Status");

                    b.Property<Guid?>("UserFk")
                        .HasColumnName("User_FK");

                    b.HasKey("KeyId");

                    b.HasIndex("NotificationFk")
                        .HasName("IX_Notification_FK");

                    b.ToTable("SO_NotificationGeneralDetail");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.SoOrderDetail", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Discount");

                    b.Property<double?>("DiscountPercent");

                    b.Property<int?>("InventoryFK");

                    b.Property<string>("Note")
                        .HasMaxLength(500);

                    b.Property<int?>("QtyBackOrdered");

                    b.Property<int?>("QtyOrdered");

                    b.Property<int?>("QtyOrderedNow");

                    b.Property<int?>("QtyPicked");

                    b.Property<int?>("Qty_On_Hand");

                    b.Property<int?>("SoFk")
                        .HasColumnName("SO_FK");

                    b.Property<int?>("SodetailStatusFk")
                        .HasColumnName("SODetailStatus_FK");

                    b.Property<decimal>("Subtotal");

                    b.Property<decimal>("Tax");

                    b.Property<double?>("TaxRate");

                    b.Property<int?>("UnitFk")
                        .HasColumnName("UnitFK");

                    b.Property<decimal>("UnitPrice");

                    b.HasKey("KeyId");

                    b.HasIndex("InventoryFK");

                    b.HasIndex("SoFk")
                        .HasName("IX_SO_FK");

                    b.HasIndex("SodetailStatusFk")
                        .HasName("IX_SODetailStatus_FK");

                    b.HasIndex("UnitFk")
                        .HasName("IX_UnitFK");

                    b.ToTable("SO_OrderDetail");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.SoOrderDetailStatus", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .HasMaxLength(50);

                    b.Property<string>("Id")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<string>("SODetailStatusName")
                        .IsRequired()
                        .HasColumnName("SODetailStatusName")
                        .HasMaxLength(100);

                    b.HasKey("KeyId");

                    b.ToTable("SO_OrderDetailStatus");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.SoOrderStatus", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Id")
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.Property<string>("SOStatusName")
                        .IsRequired()
                        .HasColumnName("SOStatusName")
                        .HasMaxLength(200);

                    b.HasKey("KeyId");

                    b.ToTable("SO_OrderStatus");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.SoPaymentStatus", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .HasMaxLength(255);

                    b.Property<string>("Id")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<string>("PaymentStatusName")
                        .HasMaxLength(50);

                    b.HasKey("KeyId");

                    b.ToTable("SO_PaymentStatus");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.SoPickTicket", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("DateCreated");

                    b.Property<DateTime?>("DateModified");

                    b.Property<DateTime?>("ExpectedShipDate");

                    b.Property<decimal>("Freight");

                    b.Property<string>("Note");

                    b.Property<Guid?>("PickClerkNo");

                    b.Property<bool?>("Qty_Mismatched");

                    b.Property<int?>("SO_FK");

                    b.Property<DateTime?>("ScheduledDate");

                    b.Property<DateTime?>("ShipDate");

                    b.Property<int?>("ShipNo");

                    b.Property<Guid?>("ShippingClerkNo");

                    b.Property<int?>("StatusShip");

                    b.HasKey("KeyId");

                    b.HasIndex("PickClerkNo");

                    b.HasIndex("SO_FK");

                    b.HasIndex("ShippingClerkNo");

                    b.ToTable("SO_PickTicket");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.SoPickTicketDetail", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("InventoryFK");

                    b.Property<int?>("Pick_No");

                    b.Property<int?>("QtyOrderedNow");

                    b.Property<int?>("QtyPicked");

                    b.Property<int?>("QtyPickedShipped");

                    b.Property<int?>("UnitFK");

                    b.HasKey("KeyId");

                    b.HasIndex("Pick_No");

                    b.ToTable("SO_PickTicketDetail");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.SoReport", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ReportName")
                        .HasMaxLength(200);

                    b.Property<int>("Status");

                    b.HasKey("KeyId");

                    b.ToTable("SO_Report");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.SoSalesOrder", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("ActualShipDate");

                    b.Property<string>("AddressNumber")
                        .HasMaxLength(50);

                    b.Property<string>("City")
                        .HasMaxLength(20);

                    b.Property<Guid?>("CreatedByFk")
                        .HasColumnName("CreatedBy_FK");

                    b.Property<int?>("CustomerFK");

                    b.Property<DateTime?>("CustomerPodate")
                        .HasColumnName("CustomerPODate")
                        .HasColumnType("datetime");

                    b.Property<string>("CustomerPonumber")
                        .HasColumnName("CustomerPONumber")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("DateCreated");

                    b.Property<DateTime?>("DateModified");

                    b.Property<string>("Description")
                        .HasMaxLength(300);

                    b.Property<decimal>("DiscountAmt");

                    b.Property<double?>("DiscountPercent");

                    b.Property<string>("District")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("ExpectedShipDate");

                    b.Property<decimal>("Freight");

                    b.Property<Guid?>("LastUpdatedByFk")
                        .HasColumnName("LastUpdatedBy_FK");

                    b.Property<string>("NameShipTo");

                    b.Property<int?>("PaymentTerm_FK");

                    b.Property<int?>("PaymentType_FK");

                    b.Property<int?>("SalesPersonFk")
                        .HasColumnName("SalesPerson_FK");

                    b.Property<int?>("ShipViaFK");

                    b.Property<int?>("ShipperFK");

                    b.Property<int?>("SostatusFk")
                        .HasColumnName("SOStatus_FK");

                    b.Property<int>("Status");

                    b.Property<string>("Street")
                        .HasMaxLength(50);

                    b.Property<decimal>("Subtotal");

                    b.Property<decimal>("TaxAmount");

                    b.Property<double?>("TaxRate");

                    b.Property<decimal>("TotalOrder");

                    b.Property<Guid?>("UserId");

                    b.Property<string>("Ward")
                        .HasMaxLength(20);

                    b.HasKey("KeyId");

                    b.HasIndex("CreatedByFk")
                        .HasName("IX_CreatedBy_FK");

                    b.HasIndex("CustomerFK");

                    b.HasIndex("LastUpdatedByFk")
                        .HasName("IX_LastUpdatedBy_FK");

                    b.HasIndex("PaymentTerm_FK");

                    b.HasIndex("PaymentType_FK");

                    b.HasIndex("SalesPersonFk")
                        .HasName("IX_SalesPerson_FK");

                    b.HasIndex("SostatusFk")
                        .HasName("IX_SOStatus_FK");

                    b.HasIndex("UserId");

                    b.ToTable("SO_SalesOrder");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.TblMenu", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FormName")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("FormParentName")
                        .HasMaxLength(200);

                    b.Property<string>("MenuValue")
                        .HasMaxLength(1000);

                    b.HasKey("KeyId");

                    b.ToTable("tblMenu");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.TblMenuGroup", b =>
                {
                    b.Property<int>("MenuId");

                    b.Property<int>("GroupId")
                        .HasColumnName("GroupID");

                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("LevelAccess")
                        .HasColumnName("levelAccess");

                    b.HasKey("MenuId", "GroupId");

                    b.HasAlternateKey("KeyId");

                    b.HasIndex("GroupId")
                        .HasName("IX_GroupID");

                    b.HasIndex("MenuId")
                        .HasName("IX_MenuId");

                    b.ToTable("tblMenuGroup");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.tblSystemParameters", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CompanyAddress");

                    b.Property<string>("CompanyName");

                    b.Property<double?>("CorparateUnemploymentInsurance");

                    b.Property<double?>("CorparateUnionFee");

                    b.Property<double?>("CorporateMedicalInsurance");

                    b.Property<double?>("CorporateSocialInsurance");

                    b.Property<DateTime?>("DateCreated");

                    b.Property<DateTime?>("DateModified");

                    b.Property<decimal?>("DependencyDeduction");

                    b.Property<string>("Email");

                    b.Property<double?>("EmployeeMedicalInsurance");

                    b.Property<double?>("EmployeeSocialInsurance");

                    b.Property<double?>("EmployeeUnemploymentInsurance");

                    b.Property<double?>("EmployeeUnionFee");

                    b.Property<string>("Fax");

                    b.Property<string>("HolidaysInYear");

                    b.Property<decimal?>("MinimumSalary");

                    b.Property<string>("PhoneNumber");

                    b.Property<decimal?>("TotalSalaryFund");

                    b.Property<decimal?>("YourselfDeduction");

                    b.HasKey("KeyId");

                    b.ToTable("tbl_SystemParameters");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("Avatar");

                    b.Property<string>("City")
                        .HasMaxLength(100);

                    b.Property<string>("ConcurrencyStamp");

                    b.Property<string>("Country")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime");

                    b.Property<string>("District")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("Dob");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<bool>("EmailConfirmed");

                    b.Property<string>("Fax")
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.Property<string>("FullName")
                        .HasMaxLength(200);

                    b.Property<int?>("Gender");

                    b.Property<int?>("GnCityKeyId");

                    b.Property<DateTime?>("IdDate");

                    b.Property<string>("IdNumber")
                        .HasColumnName("IdNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<bool?>("IsCustomer");

                    b.Property<bool?>("IsEmployee");

                    b.Property<bool?>("IsPersonal");

                    b.Property<bool?>("IsVendor");

                    b.Property<DateTime?>("LastLogIn")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("LastupdatedFk");

                    b.Property<string>("LastupdatedName")
                        .HasMaxLength(200);

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("NormalizedEmail");

                    b.Property<string>("NormalizedUserName");

                    b.Property<string>("Notes")
                        .HasMaxLength(255);

                    b.Property<int?>("Origin_FK")
                        .HasColumnName("Origin_FK");

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<int>("Status");

                    b.Property<string>("Street")
                        .HasMaxLength(200);

                    b.Property<string>("TaxIdnumber")
                        .HasColumnName("TaxIDNumber")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Ward")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("GnCityKeyId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.UserGroup", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnName("UserID");

                    b.Property<int>("GroupId")
                        .HasColumnName("GroupID");

                    b.HasKey("UserId", "GroupId");

                    b.HasIndex("GroupId")
                        .HasName("IX_GroupID");

                    b.HasIndex("UserId")
                        .HasName("IX_UserID");

                    b.ToTable("UserGroup");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.UserProject", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnName("UserID");

                    b.Property<int>("ProjectId");

                    b.HasKey("UserId", "ProjectId");

                    b.HasIndex("ProjectId")
                        .HasName("IX_ProjectId");

                    b.HasIndex("UserId")
                        .HasName("IX_UserID");

                    b.ToTable("UserProject");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<Guid>("RoleId");

                    b.HasKey("Id");

                    b.ToTable("AppRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.ToTable("AppUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("LoginProvider");

                    b.Property<string>("ProviderDisplayName");

                    b.Property<string>("ProviderKey");

                    b.HasKey("UserId");

                    b.ToTable("AppUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("RoleId");

                    b.Property<Guid>("UserId");

                    b.HasKey("RoleId", "UserId");

                    b.ToTable("AppUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("LoginProvider");

                    b.Property<string>("Name");

                    b.Property<string>("Value");

                    b.HasKey("UserId");

                    b.ToTable("AppUserTokens");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.ArAccountsReceivable", b =>
                {
                    b.HasOne("ERPWebApp.Data.Entities.Gnproject", "Project")
                        .WithMany("ArAccountsReceivable")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK_dbo.AR_AccountsReceivable_dbo.GNProject_ProjectId");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.ArAccountsReceivableAdjustments", b =>
                {
                    b.HasOne("ERPWebApp.Data.Entities.User", "AuthorizedByNavigation")
                        .WithMany("ArAccountsReceivableAdjustments")
                        .HasForeignKey("AuthorizedBy")
                        .HasConstraintName("FK_dbo.AR_AccountsReceivableAdjustments_dbo.User_Authorized_By");

                    b.HasOne("ERPWebApp.Data.Entities.GnArtransactionType", "TranTypeNavigation")
                        .WithMany("ArAccountsReceivableAdjustments")
                        .HasForeignKey("TranType")
                        .HasConstraintName("FK_dbo.AR_AccountsReceivableAdjustments_dbo.GN_ARTransactionType_Tran_Type");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.ArInvoice", b =>
                {
                    b.HasOne("ERPWebApp.Data.Entities.ArInvoiceStatus", "ArinvoiceStatusFkNavigation")
                        .WithMany("ArInvoice")
                        .HasForeignKey("ArinvoiceStatusFk")
                        .HasConstraintName("FK_dbo.AR_Invoice_dbo.AR_InvoiceStatus_ARInvoiceStatus_FK");

                    b.HasOne("ERPWebApp.Data.Entities.SoCustomer", "CustomerFkNavigation")
                        .WithMany("ArInvoice")
                        .HasForeignKey("CustomerFK")
                        .HasConstraintName("FK_dbo.AR_Invoice_dbo.SO_Customer_Customer_FK");

                    b.HasOne("ERPWebApp.Data.Entities.GnPaymentTerms", "PaymentTermFkNavigation")
                        .WithMany("ArInvoice")
                        .HasForeignKey("PaymentTermFk")
                        .HasConstraintName("FK_dbo.AR_Invoice_dbo.GN_PaymentTerms_PaymentTerm_FK");

                    b.HasOne("ERPWebApp.Data.Entities.User", "SalespersonNoNavigation")
                        .WithMany("ArInvoices")
                        .HasForeignKey("SalespersonNo")
                        .HasConstraintName("FK_dbo.AR_Invoice_dbo.HP_Employee_Salesperson_No");

                    b.HasOne("ERPWebApp.Data.Entities.SoSalesOrder", "SoSalesOrderNavigation")
                        .WithMany("ArInvoices")
                        .HasForeignKey("SoId");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.ArInvoiceDetail", b =>
                {
                    b.HasOne("ERPWebApp.Data.Entities.IcInventory", "InventoryFkNavigation")
                        .WithMany("ArInvoiceDetail")
                        .HasForeignKey("InventoryFk")
                        .HasConstraintName("FK_dbo.AR_InvoiceDetail_dbo.IC_Inventory_Inventory_FK");

                    b.HasOne("ERPWebApp.Data.Entities.ArInvoice", "InvoiceFkNavigation")
                        .WithMany("ArInvoiceDetail")
                        .HasForeignKey("InvoiceFk")
                        .HasConstraintName("FK_dbo.AR_InvoiceDetail_dbo.AR_Invoice_Invoice_FK");

                    b.HasOne("ERPWebApp.Data.Entities.IcUnit", "UnitFkNavigation")
                        .WithMany("ArInvoiceDetail")
                        .HasForeignKey("UnitFk")
                        .HasConstraintName("FK_dbo.AR_InvoiceDetail_dbo.IC_Unit_Unit_FK");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.ArPeriodPayment", b =>
                {
                    b.HasOne("ERPWebApp.Data.Entities.Gnproject", "ProjectFkNavigation")
                        .WithMany("ArPeriodPayment")
                        .HasForeignKey("ProjectFk")
                        .HasConstraintName("FK_dbo.AR_PeriodPayment_dbo.GNProject_Project_FK")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.ArPeriodPaymentDetail", b =>
                {
                    b.HasOne("ERPWebApp.Data.Entities.ArPeriodPayment", "PeriodPaymentFkNavigation")
                        .WithMany("ArPeriodPaymentDetail")
                        .HasForeignKey("PeriodPaymentFk")
                        .HasConstraintName("FK_dbo.AR_PeriodPaymentDetail_dbo.AR_PeriodPayment_PeriodPayment_FK")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.BoqAcceptance", b =>
                {
                    b.HasOne("ERPWebApp.Data.Entities.BoqAcceptanceStatus", "tblBoqAcceptanceStatus")
                        .WithMany("tblBoqAcceptance")
                        .HasForeignKey("AcceptanceStatus_FK");

                    b.HasOne("ERPWebApp.Data.Entities.User", "CreatePaymentBy")
                        .WithMany()
                        .HasForeignKey("CreatePaymentBy_FK");

                    b.HasOne("ERPWebApp.Data.Entities.User", "EngineerBy")
                        .WithMany()
                        .HasForeignKey("Engineer_FK");

                    b.HasOne("ERPWebApp.Data.Entities.BoqSalesOrder", "tblBoqSalesOrder")
                        .WithMany("tblBoqAcceptance")
                        .HasForeignKey("SO_FK")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.BoqAcceptanceDetail", b =>
                {
                    b.HasOne("ERPWebApp.Data.Entities.BoqAcceptance", "tblBoqAcceptance")
                        .WithMany("tblBoqAcceptanceDetails")
                        .HasForeignKey("Acceptance_FK")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPWebApp.Data.Entities.BoqOrderDetail", "tboBoqOrderDetail")
                        .WithMany()
                        .HasForeignKey("OrderDetail_FK");

                    b.HasOne("ERPWebApp.Data.Entities.IcUnit", "tblUnit")
                        .WithMany()
                        .HasForeignKey("Unit_FK");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.BoqOrderDetail", b =>
                {
                    b.HasOne("ERPWebApp.Data.Entities.IcUnit")
                        .WithMany("tblBoqOrderDetail")
                        .HasForeignKey("IcUnitKeyId");

                    b.HasOne("ERPWebApp.Data.Entities.BoqSalesOrder", "tblBoqSalesOrder")
                        .WithMany("tblBoqOrderDetail")
                        .HasForeignKey("SO_FK")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPWebApp.Data.Entities.IcUnit", "tblUnit")
                        .WithMany("tblBoqOrderDetails")
                        .HasForeignKey("UnitFK");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.BoqOrderDetailBom", b =>
                {
                    b.HasOne("ERPWebApp.Data.Entities.BoqOrderDetail", "tblBoqOrderDetail")
                        .WithMany("BoqOrderDetailBoms")
                        .HasForeignKey("OrderDetailFK")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPWebApp.Data.Entities.GnProductType", "tblProductType")
                        .WithMany("tblBoqOrderDetailBom")
                        .HasForeignKey("Product_Type");

                    b.HasOne("ERPWebApp.Data.Entities.IcUnit", "tblUnit")
                        .WithMany("tblboqOrderDetailBoms")
                        .HasForeignKey("UnitFK");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.BoqSalesOrder", b =>
                {
                    b.HasOne("ERPWebApp.Data.Entities.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedBy_FK");

                    b.HasOne("ERPWebApp.Data.Entities.User", "LastUpdatedBy")
                        .WithMany()
                        .HasForeignKey("LastUpdatedBy_FK");

                    b.HasOne("ERPWebApp.Data.Entities.User", "LastUpdatedByBOQ2")
                        .WithMany()
                        .HasForeignKey("LastUpdatedBy_FKBOQ2");

                    b.HasOne("ERPWebApp.Data.Entities.Gnproject", "Gnproject")
                        .WithMany()
                        .HasForeignKey("ProjectFK")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPWebApp.Data.Entities.BoqOrderStatus", "tblBoqOrderStatus")
                        .WithMany("tblBoqSalesOrder")
                        .HasForeignKey("SOStatus_FK")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPWebApp.Data.Entities.HpEmployee", "SalesPerson")
                        .WithMany()
                        .HasForeignKey("SalesPerson_FK");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.BoqSyntheticMaterials", b =>
                {
                    b.HasOne("ERPWebApp.Data.Entities.GnProductType", "tblProductType")
                        .WithMany()
                        .HasForeignKey("Product_Type");

                    b.HasOne("ERPWebApp.Data.Entities.BoqSalesOrder", "tblBoqSalesOrder")
                        .WithMany("tblBoqSyntheticMaterial")
                        .HasForeignKey("SaleOrderFK")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPWebApp.Data.Entities.IcUnit", "IC_Unit")
                        .WithMany()
                        .HasForeignKey("UnitFK")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.CrCashReceipts", b =>
                {
                    b.HasOne("ERPWebApp.Data.Entities.User", "CreatedByFkNavigation")
                        .WithMany("CrCashReceiptsCreatedByFkNavigation")
                        .HasForeignKey("CreatedByFk")
                        .HasConstraintName("FK_dbo.CR_CashReceipts_dbo.User_CreatedBy_FK");

                    b.HasOne("ERPWebApp.Data.Entities.User", "LastUpdatedByFkNavigation")
                        .WithMany("CrCashReceiptsLastUpdatedByFkNavigation")
                        .HasForeignKey("LastUpdatedByFk")
                        .HasConstraintName("FK_dbo.CR_CashReceipts_dbo.User_LastUpdatedBy_FK")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.CrCashReceiptsAccountDetail", b =>
                {
                    b.HasOne("ERPWebApp.Data.Entities.CrCashReceipts", "ReceiptFkNavigation")
                        .WithMany("CrCashReceiptsAccountDetail")
                        .HasForeignKey("ReceiptFk")
                        .HasConstraintName("FK_dbo.CR_CashReceiptsAccountDetail_dbo.CR_CashReceipts_Receipt_FK");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.CrCashReceiptsDetail", b =>
                {
                    b.HasOne("ERPWebApp.Data.Entities.CrCashReceipts", "ReceiptFkNavigation")
                        .WithMany("CrCashReceiptsDetail")
                        .HasForeignKey("ReceiptFk")
                        .HasConstraintName("FK_dbo.CR_CashReceiptsDetail_dbo.CR_CashReceipts_Receipt_FK");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.CrRemittanceAdvice", b =>
                {
                    b.HasOne("ERPWebApp.Data.Entities.ArInvoice", "InvoiceNoNavigation")
                        .WithMany("CrRemittanceAdvice")
                        .HasForeignKey("InvoiceNo")
                        .HasConstraintName("FK_dbo.CR_RemittanceAdvice_dbo.AR_Invoice_Invoice_No");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.Document", b =>
                {
                    b.HasOne("ERPWebApp.Data.Entities.Gnproject", "ProjectFkNavigation")
                        .WithMany("Document")
                        .HasForeignKey("ProjectFk")
                        .HasConstraintName("FK_dbo.Document_dbo.GNProject_ProjectFK");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.GlGeneralLedger", b =>
                {
                    b.HasOne("ERPWebApp.Data.Entities.GnLedger", "AccountFkNavigation")
                        .WithMany("GlGeneralLedger")
                        .HasForeignKey("AccountFk")
                        .HasConstraintName("FK_dbo.GL_GeneralLedger_dbo.GN_Ledger_Account_FK")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPWebApp.Data.Entities.GnPeriod", "Period")
                        .WithMany("GlGeneralLedger")
                        .HasForeignKey("PeriodId")
                        .HasConstraintName("FK_dbo.GL_GeneralLedger_dbo.GN_Period_PeriodId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.GnCustomerLiabilities", b =>
                {
                    b.HasOne("ERPWebApp.Data.Entities.Gnproject", "ProjectFkNavigation")
                        .WithMany("GnCustomerLiabilities")
                        .HasForeignKey("ProjectFk")
                        .HasConstraintName("FK_dbo.GN_CustomerLiabilities_dbo.GNProject_Project_FK")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.GnProduct", b =>
                {
                    b.HasOne("ERPWebApp.Data.Entities.User", "LastUpdateByFkNavigation")
                        .WithMany("GnProduct")
                        .HasForeignKey("LastUpdateByFk")
                        .HasConstraintName("FK_dbo.GN_Product_dbo.User_LastUpdateBy_FK");

                    b.HasOne("ERPWebApp.Data.Entities.GnProductType", "ProductTypeNavigation")
                        .WithMany("GnProduct")
                        .HasForeignKey("ProductTypeFK")
                        .HasConstraintName("FK_dbo.GN_Product_dbo.GN_ProductType_Product_Type");

                    b.HasOne("ERPWebApp.Data.Entities.IcUnit", "ProductUnitNavigation")
                        .WithMany("GnProduct")
                        .HasForeignKey("ProductUnit")
                        .HasConstraintName("FK_dbo.GN_Product_dbo.IC_Unit_Product_Unit");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.GnProduct_Attribute_Value", b =>
                {
                    b.HasOne("ERPWebApp.Data.Entities.GnProduct_Attribute", "tblProduct_Attribute")
                        .WithMany("tblProduct_Attribute_Values")
                        .HasForeignKey("productAttributeFk")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.GnProduct_link", b =>
                {
                    b.HasOne("ERPWebApp.Data.Entities.GnProduct", "TblProduct_link")
                        .WithOne("GnProduct_links_children")
                        .HasForeignKey("ERPWebApp.Data.Entities.GnProduct_link", "Linked_product_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPWebApp.Data.Entities.GnProduct", "TblProduct")
                        .WithMany("GnProduct_link_parent")
                        .HasForeignKey("Product_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.GnProduct_ProductAttribute", b =>
                {
                    b.HasOne("ERPWebApp.Data.Entities.GnProduct_Attribute", "tblProduct_Attribute")
                        .WithMany("tblproduct_ProductAttributes")
                        .HasForeignKey("Product_AttributeFk")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPWebApp.Data.Entities.GnProduct", "tblProduct")
                        .WithMany("TblProduct_ProductAttributes")
                        .HasForeignKey("product_fk")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.Gnproject", b =>
                {
                    b.HasOne("ERPWebApp.Data.Entities.SoCustomer", "CustomerFkNavigation")
                        .WithMany("Gnproject")
                        .HasForeignKey("CustomerFK")
                        .HasConstraintName("FK_dbo.GNProject_dbo.SO_Customer_CustomerFK")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPWebApp.Data.Entities.User", "LastUpdateByFkNavigation")
                        .WithMany("gnprojects")
                        .HasForeignKey("LastUpdatedByFk");

                    b.HasOne("ERPWebApp.Data.Entities.GnRegion", "RegionFkNavigation")
                        .WithMany("Gnproject")
                        .HasForeignKey("RegionFk")
                        .HasConstraintName("FK_dbo.GNProject_dbo.GN_Region_Region_FK");

                    b.HasOne("ERPWebApp.Data.Entities.GnprojectStatus", "StatusNavigation")
                        .WithMany("Gnproject")
                        .HasForeignKey("Status")
                        .HasConstraintName("FK_dbo.GNProject_dbo.GNProjectStatus_Status")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.GnprojectDetails", b =>
                {
                    b.HasOne("ERPWebApp.Data.Entities.Gnproject", "ProjectFkNavigation")
                        .WithMany("GnprojectDetails")
                        .HasForeignKey("ProjectFk")
                        .HasConstraintName("FK_dbo.GNProjectDetails_dbo.GNProject_ProjectFK");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.HpAllowedVacation", b =>
                {
                    b.HasOne("ERPWebApp.Data.Entities.HpEmployee", "EmployeeFKNavigation")
                        .WithMany("AllowedVacations")
                        .HasForeignKey("EmployeeFK")
                        .HasConstraintName("FK_dbo.HpAllowedVacation_dbo.HP_Employee_Employee_FK")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPWebApp.Data.Entities.HpEmployee", "EmployeeHandoverFKNavigation")
                        .WithMany("AllowedVacationHandoverTos")
                        .HasForeignKey("HandoverToFK")
                        .HasConstraintName("FK_dbo.HpAllowedVacation_dbo.HP_Employee_HandoverTo_FK")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPWebApp.Data.Entities.HpAllowedVacationStatus", "AllowedVacationStatusFKNavigation")
                        .WithMany("HpAllowedVacations")
                        .HasForeignKey("StatusFK")
                        .HasConstraintName("FK_dbo.HpAllowedVacation_dbo.HP_HpAllowedVacationStatus_Status_FK")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPWebApp.Data.Entities.HpTimekeepingType", "TimekeepingTypeFKNavigation")
                        .WithMany("AllowedVacations")
                        .HasForeignKey("TimeKeepingTypeFK")
                        .HasConstraintName("FK_dbo.HpAllowedVacation_dbo.HP_HpTimekeepingType_TimeKeepingType_FK")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.HpBussinessApplication", b =>
                {
                    b.HasOne("ERPWebApp.Data.Entities.User", "CreatedByFKNavigation")
                        .WithMany("BussinessApplications")
                        .HasForeignKey("CreatedByFKNavigationId");

                    b.HasOne("ERPWebApp.Data.Entities.HpEmployee", "EmployeeFKNavigation")
                        .WithMany("BussinessApplications")
                        .HasForeignKey("EmployeeFK")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.HpEmployee", b =>
                {
                    b.HasOne("ERPWebApp.Data.Entities.HpDepartment", "DepartmentFkNavigation")
                        .WithMany("HpEmployee")
                        .HasForeignKey("Department_FK")
                        .HasConstraintName("FK_dbo.HP_Employee_dbo.HP_Department_Department_FK");

                    b.HasOne("ERPWebApp.Data.Entities.HpEmployeeType", "EmployeeTypeFKNavigation")
                        .WithMany("HpEmployees")
                        .HasForeignKey("EmployeeTypeFK");

                    b.HasOne("ERPWebApp.Data.Entities.HpAllowedVacation", "HandoverToFKNavigation")
                        .WithMany()
                        .HasForeignKey("HandoverToFKNavigationKeyId");

                    b.HasOne("ERPWebApp.Data.Entities.User", "LastupdatedBy")
                        .WithMany("LastupdatedEmployeeBys")
                        .HasForeignKey("LastupdatedByFk")
                        .HasConstraintName("FK_dbo.User_dbo.HP_Employee_Employee_FK");

                    b.HasOne("ERPWebApp.Data.Entities.HpEducationalLevel", "LiteracyFkNavigation")
                        .WithMany("HpEmployees")
                        .HasForeignKey("LiteracyFk");

                    b.HasOne("ERPWebApp.Data.Entities.GnNation", "NationFkNavigation")
                        .WithMany("HpEmployee")
                        .HasForeignKey("NationFk")
                        .HasConstraintName("FK_dbo.HP_Employee_dbo.GN_Nation_Nation_FK");

                    b.HasOne("ERPWebApp.Data.Entities.HpNationality", "NationalityFkNavigation")
                        .WithMany("HpEmployees")
                        .HasForeignKey("NationalityFk");

                    b.HasOne("ERPWebApp.Data.Entities.HpPosition", "PositionFkNavigation")
                        .WithMany("HpEmployee")
                        .HasForeignKey("PositionFk")
                        .HasConstraintName("FK_dbo.HP_Employee_dbo.HP_Position_Position_FK");

                    b.HasOne("ERPWebApp.Data.Entities.GnCity", "ProvinceACFkNavigation")
                        .WithMany("HpEmployeesAC")
                        .HasForeignKey("ProvinceACFk");

                    b.HasOne("ERPWebApp.Data.Entities.GnCity", "ProvincePRFkNavigation")
                        .WithMany("HpEmployeesPR")
                        .HasForeignKey("ProvincePRFk");

                    b.HasOne("ERPWebApp.Data.Entities.GnReligion", "ReligionFkNavigation")
                        .WithMany("HpEmployee")
                        .HasForeignKey("ReligionFk")
                        .HasConstraintName("FK_dbo.HP_Employee_dbo.GN_Religion_Religion_FK");

                    b.HasOne("ERPWebApp.Data.Entities.User", "UserBy")
                        .WithOne("EmployeeFkNavigation")
                        .HasForeignKey("ERPWebApp.Data.Entities.HpEmployee", "User_FK");

                    b.HasOne("ERPWebApp.Data.Entities.HpWorkingGroup", "WorkingGroupFkNavigation")
                        .WithMany("HpEmployees")
                        .HasForeignKey("WorkingGroupFk");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.HpEmployeeLog", b =>
                {
                    b.HasOne("ERPWebApp.Data.Entities.HpDepartment", "ChangeDepartmentFKNavigation")
                        .WithMany("HpEmployeeLogs")
                        .HasForeignKey("ChangeDepartmentFK")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPWebApp.Data.Entities.HpWorkingGroup", "ChangeWorkingGroupFKNavigation")
                        .WithMany("HpEmployeeLogs")
                        .HasForeignKey("ChangeWorkingGroupFK")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.HpExpertiseDetail", b =>
                {
                    b.HasOne("ERPWebApp.Data.Entities.HpQualification", "DegreeFKNavigation")
                        .WithMany("ExpertiseDetails")
                        .HasForeignKey("DegreeFK");

                    b.HasOne("ERPWebApp.Data.Entities.HpEmployee", "EmployeeFKNavigation")
                        .WithMany("ExpertiseDetails")
                        .HasForeignKey("EmployeeFK")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPWebApp.Data.Entities.HpMajor", "MajorFKNavigation")
                        .WithMany("ExpertiseDetails")
                        .HasForeignKey("MajorFK");

                    b.HasOne("ERPWebApp.Data.Entities.HpTrainingSystem", "TrainingSystemFKNavigation")
                        .WithMany("ExpertiseDetails")
                        .HasForeignKey("TrainingSystemFK");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.HpFamilyCircumstancesDetail", b =>
                {
                    b.HasOne("ERPWebApp.Data.Entities.HpEmployee", "EmployeeFKNavigation")
                        .WithMany("FamilyCircumstancesDetails")
                        .HasForeignKey("EmployeeFK")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.HpLanguageDetail", b =>
                {
                    b.HasOne("ERPWebApp.Data.Entities.HpEmployee", "EmployeeFKNavigation")
                        .WithMany("LanguageDetails")
                        .HasForeignKey("EmployeeFK")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPWebApp.Data.Entities.HpLanguage", "LanguageFKNavigation")
                        .WithMany("LanguageDetails")
                        .HasForeignKey("LanguageFK");

                    b.HasOne("ERPWebApp.Data.Entities.HpQualification", "LevelFKNavigation")
                        .WithMany("LanguageDetails")
                        .HasForeignKey("LevelFKNavigationKeyId");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.HpPermitDays", b =>
                {
                    b.HasOne("ERPWebApp.Data.Entities.HpEmployee", "EmployeeFKNavigation")
                        .WithMany("PermitDays")
                        .HasForeignKey("EmployeeFK")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.HpRank", b =>
                {
                    b.HasOne("ERPWebApp.Data.Entities.HpQuota", "QuotaFKNavigation")
                        .WithMany("HpRanks")
                        .HasForeignKey("QuotaFK")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.HpSalary", b =>
                {
                    b.HasOne("ERPWebApp.Data.Entities.HpEmployee", "EmployeeFKNavigation")
                        .WithMany("Salaries")
                        .HasForeignKey("EmployeeFK")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.HpSalaryDetail", b =>
                {
                    b.HasOne("ERPWebApp.Data.Entities.HpEmployee", "EmployeeFKNavigation")
                        .WithMany("SalaryDetails")
                        .HasForeignKey("EmployeeFK")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.HpScoreEmployee", b =>
                {
                    b.HasOne("ERPWebApp.Data.Entities.HpEmployee", "EmployeeFKNavigation")
                        .WithMany("ScoreEmployees")
                        .HasForeignKey("EmployeeFK")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPWebApp.Data.Entities.HpTimekeepingType", "TimekeepingTypeFKNavigation")
                        .WithMany("HpScoreEmployees")
                        .HasForeignKey("TimeKeepingTypeFK");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.HpWorkingProcessDetail", b =>
                {
                    b.HasOne("ERPWebApp.Data.Entities.HpEmployee", "EmployeeFKNavigation")
                        .WithMany("WorkingProcessDetails")
                        .HasForeignKey("EmployeeFK")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.IcInventory", b =>
                {
                    b.HasOne("ERPWebApp.Data.Entities.IcCategory")
                        .WithMany("IcInventory")
                        .HasForeignKey("IcCategoryKeyId");

                    b.HasOne("ERPWebApp.Data.Entities.IcUnit")
                        .WithMany("IcInventory")
                        .HasForeignKey("IcUnitKeyId");

                    b.HasOne("ERPWebApp.Data.Entities.User", "LastUpdateByFkNavigation")
                        .WithMany("IcInventory")
                        .HasForeignKey("LastUpdateByFk")
                        .HasConstraintName("FK_dbo.IC_Inventory_dbo.GN_AddressBook_LastUpdateBy_FK")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPWebApp.Data.Entities.GnProduct", "ProductFkNavigation")
                        .WithMany("IcInventory")
                        .HasForeignKey("ProductFk")
                        .HasConstraintName("FK_dbo.IC_Inventory_dbo.GN_Product_Product_FK");

                    b.HasOne("ERPWebApp.Data.Entities.PoVendor", "VendorNumberFkNavigation")
                        .WithMany("IcInventory")
                        .HasForeignKey("VendorNumberFk")
                        .HasConstraintName("FK_dbo.IC_Inventory_dbo.PO_Vendor_VendorNumber_FK");

                    b.HasOne("ERPWebApp.Data.Entities.IcWarehouse", "WarehouseFkNavigation")
                        .WithMany("IcInventory")
                        .HasForeignKey("WarehouseFk")
                        .HasConstraintName("FK_dbo.IC_Inventory_dbo.IC_Warehouse_Warehouse_FK");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.IcInventoryCustomerPrice", b =>
                {
                    b.HasOne("ERPWebApp.Data.Entities.SoCustomer", "CustomerFkNavigation")
                        .WithMany("IcInventoryCustomerPrices")
                        .HasForeignKey("CustomerFk")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPWebApp.Data.Entities.IcInventory", "InventoryFkNavigation")
                        .WithMany("IcInventoryCustomerPrices")
                        .HasForeignKey("InventoryFk")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.IcUnit", b =>
                {
                    b.HasOne("ERPWebApp.Data.Entities.User", "LastUpdatedByNavigation")
                        .WithMany("IcUnit")
                        .HasForeignKey("LastUpdatedBy")
                        .HasConstraintName("FK_dbo.IC_Unit_dbo.User_LastUpdatedBy");

                    b.HasOne("ERPWebApp.Data.Entities.IcUnitCategory", "UnitCategoryFkNavigation")
                        .WithMany("IcUnit")
                        .HasForeignKey("UnitCategoryFk")
                        .HasConstraintName("FK_dbo.IC_Unit_dbo.IC_UnitCategory_UnitCategory_FK");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.IcUnitCategory", b =>
                {
                    b.HasOne("ERPWebApp.Data.Entities.User", "LastUpdatedByNavigation")
                        .WithMany("IcUnitCategory")
                        .HasForeignKey("LastUpdatedBy")
                        .HasConstraintName("FK_dbo.IC_UnitCategory_dbo.User_LastUpdatedBy");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.MrpBom", b =>
                {
                    b.HasOne("ERPWebApp.Data.Entities.GnProduct", "ProductBomFkNavigation")
                        .WithMany("ProductBomFkNavigations")
                        .HasForeignKey("ProductBomFk");

                    b.HasOne("ERPWebApp.Data.Entities.GnProduct", "ProductFkNavigation")
                        .WithMany()
                        .HasForeignKey("ProductFk");

                    b.HasOne("ERPWebApp.Data.Entities.User")
                        .WithMany("MrpBom")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.Permission", b =>
                {
                    b.HasOne("ERPWebApp.Data.Entities.Function", "Function")
                        .WithMany()
                        .HasForeignKey("FunctionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPWebApp.Data.Entities.Role", "AppRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.PoAccountPayable", b =>
                {
                    b.HasOne("ERPWebApp.Data.Entities.PoVendor", "VendorFkNavigation")
                        .WithMany("PoAccountPayable")
                        .HasForeignKey("VendorFk")
                        .HasConstraintName("FK_dbo.PO_AccountPayable_dbo.PO_Vendor_Vendor_FK");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.PoAccountsPayableAdjustments", b =>
                {
                    b.HasOne("ERPWebApp.Data.Entities.User", "AuthorizedByNavigation")
                        .WithMany("PoAccountsPayableAdjustments")
                        .HasForeignKey("AuthorizedBy")
                        .HasConstraintName("FK_dbo.PO_AccountsPayableAdjustments_dbo.User_Authorized_By");

                    b.HasOne("ERPWebApp.Data.Entities.PoVendor", "VendorFkNavigation")
                        .WithMany("PoAccountsPayableAdjustments")
                        .HasForeignKey("VendorFk")
                        .HasConstraintName("FK_dbo.PO_AccountsPayableAdjustments_dbo.PO_Vendor_Vendor_FK");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.PoApinvoices", b =>
                {
                    b.HasOne("ERPWebApp.Data.Entities.PoVendor", "VendorFkNavigation")
                        .WithMany("PoApinvoices")
                        .HasForeignKey("VendorFk")
                        .HasConstraintName("FK_dbo.PO_APInvoices_dbo.PO_Vendor_Vendor_FK")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.PoApinvoicesDetail", b =>
                {
                    b.HasOne("ERPWebApp.Data.Entities.PoApinvoices", "InvoiceFkNavigation")
                        .WithMany("PoApinvoicesDetail")
                        .HasForeignKey("InvoiceFk")
                        .HasConstraintName("FK_dbo.PO_APInvoicesDetail_dbo.PO_APInvoices_Invoice_FK")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.PoCashDisbursement", b =>
                {
                    b.HasOne("ERPWebApp.Data.Entities.PoVendor", "VendorFkNavigation")
                        .WithMany("PoCashDisbursement")
                        .HasForeignKey("VendorFk")
                        .HasConstraintName("FK_dbo.PO_CashDisbursement_dbo.PO_Vendor_Vendor_FK")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.PoCashDisbursementDetail", b =>
                {
                    b.HasOne("ERPWebApp.Data.Entities.PoCashDisbursement", "PoCashDisbNoFkNavigation")
                        .WithMany("PoCashDisbursementDetail")
                        .HasForeignKey("PoCashDisbNoFk")
                        .HasConstraintName("FK_dbo.PO_CashDisbursementDetail_dbo.PO_CashDisbursement_PO_CashDisb_No_FK")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.PoPurchaseOrder", b =>
                {
                    b.HasOne("ERPWebApp.Data.Entities.HpEmployee", "BuyerFkNavigation")
                        .WithMany("PoPurchaseOrder")
                        .HasForeignKey("BuyerFk")
                        .HasConstraintName("FK_dbo.PO_PurchaseOrder_dbo.HP_Employee_Buyer_FK")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPWebApp.Data.Entities.User", "LastUpdate_By")
                        .WithMany()
                        .HasForeignKey("LastUpdateBy_FK");

                    b.HasOne("ERPWebApp.Data.Entities.PoOrderStatus", "PostatusFkNavigation")
                        .WithMany("PoPurchaseOrder")
                        .HasForeignKey("PostatusFk")
                        .HasConstraintName("FK_dbo.PO_PurchaseOrder_dbo.PO_OrderStatus_POStatus_FK")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPWebApp.Data.Entities.PoVendor", "VendorFkNavigation")
                        .WithMany("PoPurchaseOrders")
                        .HasForeignKey("VendorFk")
                        .HasConstraintName("FK_dbo.PO_PurchaseOrder_dbo.PO_Vendor_Vendor_FK");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.PoPurchaseOrderBom", b =>
                {
                    b.HasOne("ERPWebApp.Data.Entities.PoPurchaseOrderDetail", "PoPurchaseOrderDetail")
                        .WithMany("PoPurchaseOrderBoms")
                        .HasForeignKey("PoDetailFf")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.PoPurchaseOrderBomDetail", b =>
                {
                    b.HasOne("ERPWebApp.Data.Entities.PoPurchaseOrderBom", "PoPurchaseOrderBom")
                        .WithMany("PoPurchaseOrderBomDetails")
                        .HasForeignKey("PurchaseOrderBomFK")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.PoPurchaseOrderDetail", b =>
                {
                    b.HasOne("ERPWebApp.Data.Entities.PoPurchaseOrder", "PoFkNavigation")
                        .WithMany("PoPurchaseOrderDetail")
                        .HasForeignKey("PoFk")
                        .HasConstraintName("FK_dbo.PO_PurchaseOrderDetail_dbo.PO_PurchaseOrder_PO_FK")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.PoRecOrderDetail", b =>
                {
                    b.HasOne("ERPWebApp.Data.Entities.PoRecReport", "RrnoFkNavigation")
                        .WithMany("PoRecOrderDetail")
                        .HasForeignKey("RrnoFk")
                        .HasConstraintName("FK_dbo.PO_RecOrderDetail_dbo.PO_RecReport_RRNo_FK")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.PoRecReport", b =>
                {
                    b.HasOne("ERPWebApp.Data.Entities.User", "CreatedByFkNavigation")
                        .WithMany("PoRecReport")
                        .HasForeignKey("CreatedByFk")
                        .HasConstraintName("FK_dbo.PO_RecReport_dbo.User_CreatedBy_FK");

                    b.HasOne("ERPWebApp.Data.Entities.HpEmployee", "ReceiverFkNavigation")
                        .WithMany("PoRecReport")
                        .HasForeignKey("ReceiverFk")
                        .HasConstraintName("FK_dbo.PO_RecReport_dbo.HP_Employee_Receiver_FK")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPWebApp.Data.Entities.PoVendor", "VendorFkNavigation")
                        .WithMany("PoRecReport")
                        .HasForeignKey("VendorFk")
                        .HasConstraintName("FK_dbo.PO_RecReport_dbo.PO_Vendor_Vendor_FK");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.PoVendor", b =>
                {
                    b.HasOne("ERPWebApp.Data.Entities.User", "LastUpdatedByNavigation")
                        .WithMany("LastupdatedPoVendors")
                        .HasForeignKey("LastUpdatedFk");

                    b.HasOne("ERPWebApp.Data.Entities.User", "UserBy")
                        .WithOne("PoVendorFkNavigation")
                        .HasForeignKey("ERPWebApp.Data.Entities.PoVendor", "UserFk");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.SoAcceptance", b =>
                {
                    b.HasOne("ERPWebApp.Data.Entities.SoAcceptanceStatus", "AcceptanceStatusFkNavigation")
                        .WithMany("SoAcceptance")
                        .HasForeignKey("AcceptanceStatusFk")
                        .HasConstraintName("FK_dbo.SO_Acceptance_dbo.SO_AcceptanceStatus_AcceptanceStatus_FK");

                    b.HasOne("ERPWebApp.Data.Entities.User", "CreatePaymentByFkNavigation")
                        .WithMany("SoAcceptanceCreatePaymentByFkNavigation")
                        .HasForeignKey("CreatePaymentByFk")
                        .HasConstraintName("FK_dbo.SO_Acceptance_dbo.User_CreatePaymentBy_FK");

                    b.HasOne("ERPWebApp.Data.Entities.User", "EngineerFkNavigation")
                        .WithMany("SoAcceptanceEngineerFkNavigation")
                        .HasForeignKey("EngineerFk")
                        .HasConstraintName("FK_dbo.SO_Acceptance_dbo.User_Engineer_FK")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPWebApp.Data.Entities.SoPaymentStatus", "PaymentStatusFkNavigation")
                        .WithMany("SoAcceptance")
                        .HasForeignKey("PaymentStatusFk")
                        .HasConstraintName("FK_dbo.SO_Acceptance_dbo.SO_PaymentStatus_PaymentStatus_FK")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPWebApp.Data.Entities.SoSalesOrder", "SoFkNavigation")
                        .WithMany("SoAcceptance")
                        .HasForeignKey("SoFk")
                        .HasConstraintName("FK_dbo.SO_Acceptance_dbo.SO_SalesOrder_SO_FK");

                    b.HasOne("ERPWebApp.Data.Entities.SoOrderStatus", "SostatusFkNavigation")
                        .WithMany("SoAcceptance")
                        .HasForeignKey("SostatusFk")
                        .HasConstraintName("FK_dbo.SO_Acceptance_dbo.SO_OrderStatus_SOStatus_FK");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.SoAcceptanceDetail", b =>
                {
                    b.HasOne("ERPWebApp.Data.Entities.SoAcceptance", "AcceptanceFkNavigation")
                        .WithMany("SoAcceptanceDetail")
                        .HasForeignKey("AcceptanceFk")
                        .HasConstraintName("FK_dbo.SO_AcceptanceDetail_dbo.SO_Acceptance_Acceptance_FK")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPWebApp.Data.Entities.SoOrderDetail", "OrderDetailFkNavigation")
                        .WithMany("SoAcceptanceDetail")
                        .HasForeignKey("OrderDetailFk")
                        .HasConstraintName("FK_dbo.SO_AcceptanceDetail_dbo.SO_OrderDetail_OrderDetail_FK");

                    b.HasOne("ERPWebApp.Data.Entities.IcUnit", "UnitFkNavigation")
                        .WithMany("SoAcceptanceDetail")
                        .HasForeignKey("UnitFk")
                        .HasConstraintName("FK_dbo.SO_AcceptanceDetail_dbo.IC_Unit_Unit_FK");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.SoCustomer", b =>
                {
                    b.HasOne("ERPWebApp.Data.Entities.User", "LastUpdatedByFkNavigation")
                        .WithMany("LastupdatedSoCustomes")
                        .HasForeignKey("LastUpdatedByFk")
                        .HasConstraintName("FK_dbo.SO_Customer_dbo.User_LastUpdatedBy_FK");

                    b.HasOne("ERPWebApp.Data.Entities.User", "UserBy")
                        .WithOne("SoCustomerFkNavigation")
                        .HasForeignKey("ERPWebApp.Data.Entities.SoCustomer", "UserFk");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.SoNotification", b =>
                {
                    b.HasOne("ERPWebApp.Data.Entities.SoAcceptance", "AcceptanceFkNavigation")
                        .WithMany("SoNotification")
                        .HasForeignKey("AcceptanceFk")
                        .HasConstraintName("FK_dbo.SO_Notification_dbo.SO_Acceptance_Acceptance_FK");

                    b.HasOne("ERPWebApp.Data.Entities.SoCustomer", "CustomerFkNavigation")
                        .WithMany("SoNotification")
                        .HasForeignKey("CustomerFK")
                        .HasConstraintName("FK_dbo.SO_Notification_dbo.SO_Customer_Customer_FK");

                    b.HasOne("ERPWebApp.Data.Entities.ArInvoice", "InvoiceNoNavigation")
                        .WithMany("SoNotification")
                        .HasForeignKey("InvoiceNo")
                        .HasConstraintName("FK_dbo.SO_Notification_dbo.AR_Invoice_Invoice_No");

                    b.HasOne("ERPWebApp.Data.Entities.SoPaymentStatus", "PaymentStatusFkNavigation")
                        .WithMany("SoNotification")
                        .HasForeignKey("PaymentStatusFk")
                        .HasConstraintName("FK_dbo.SO_Notification_dbo.SO_PaymentStatus_PaymentStatus_FK");

                    b.HasOne("ERPWebApp.Data.Entities.SoSalesOrder", "So")
                        .WithMany("SoNotification")
                        .HasForeignKey("SoId")
                        .HasConstraintName("FK_dbo.SO_Notification_dbo.SO_SalesOrder_SO_ID");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.SoNotificationGeneralDetail", b =>
                {
                    b.HasOne("ERPWebApp.Data.Entities.SoNotificationGeneral", "NotificationFkNavigation")
                        .WithMany("SoNotificationGeneralDetail")
                        .HasForeignKey("NotificationFk")
                        .HasConstraintName("FK_dbo.SO_NotificationGeneralDetail_dbo.SO_NotificationGeneral_Notification_FK");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.SoOrderDetail", b =>
                {
                    b.HasOne("ERPWebApp.Data.Entities.IcInventory", "InventoryFKNavigation")
                        .WithMany("SoOrderDetails")
                        .HasForeignKey("InventoryFK");

                    b.HasOne("ERPWebApp.Data.Entities.SoSalesOrder", "SoFkNavigation")
                        .WithMany("SoOrderDetail")
                        .HasForeignKey("SoFk")
                        .HasConstraintName("FK_dbo.SO_OrderDetail_dbo.SO_SalesOrder_SO_FK");

                    b.HasOne("ERPWebApp.Data.Entities.SoOrderDetailStatus", "SodetailStatusFkNavigation")
                        .WithMany("SoOrderDetail")
                        .HasForeignKey("SodetailStatusFk")
                        .HasConstraintName("FK_dbo.SO_OrderDetail_dbo.SO_OrderDetailStatus_SODetailStatus_FK");

                    b.HasOne("ERPWebApp.Data.Entities.IcUnit", "UnitFkNavigation")
                        .WithMany("SoOrderDetail")
                        .HasForeignKey("UnitFk")
                        .HasConstraintName("FK_dbo.SO_OrderDetail_dbo.IC_Unit_UnitFK");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.SoPickTicket", b =>
                {
                    b.HasOne("ERPWebApp.Data.Entities.User", "PickClerkNoNavigation")
                        .WithMany("PickClerkNoNavigation")
                        .HasForeignKey("PickClerkNo");

                    b.HasOne("ERPWebApp.Data.Entities.SoSalesOrder", "SoSalesOrder")
                        .WithMany("SoPickTickets")
                        .HasForeignKey("SO_FK");

                    b.HasOne("ERPWebApp.Data.Entities.User", "ShippingClerkNoNavigation")
                        .WithMany("ShippingClerkNoNavigation")
                        .HasForeignKey("ShippingClerkNo");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.SoPickTicketDetail", b =>
                {
                    b.HasOne("ERPWebApp.Data.Entities.SoPickTicket", "SoPickTicket")
                        .WithMany("SoPickTicketDetails")
                        .HasForeignKey("Pick_No");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.SoSalesOrder", b =>
                {
                    b.HasOne("ERPWebApp.Data.Entities.User", "CreatedByFkNavigation")
                        .WithMany("SoSalesOrderCreatedByFkNavigation")
                        .HasForeignKey("CreatedByFk")
                        .HasConstraintName("FK_dbo.SO_SalesOrder_dbo.User_CreatedBy_FK");

                    b.HasOne("ERPWebApp.Data.Entities.SoCustomer", "CustomerFKNavigation")
                        .WithMany("SoSalesOrders")
                        .HasForeignKey("CustomerFK");

                    b.HasOne("ERPWebApp.Data.Entities.User", "LastUpdatedByFkNavigation")
                        .WithMany("SoSalesOrderLastUpdatedByFkNavigation")
                        .HasForeignKey("LastUpdatedByFk")
                        .HasConstraintName("FK_dbo.SO_SalesOrder_dbo.User_LastUpdatedBy_FK");

                    b.HasOne("ERPWebApp.Data.Entities.GnPaymentTerms", "PaymentTermFKNavigation")
                        .WithMany("SoSalesOrders")
                        .HasForeignKey("PaymentTerm_FK");

                    b.HasOne("ERPWebApp.Data.Entities.GnPaymentTypes", "PaymentTypeFKNavigation")
                        .WithMany("SoSalesOrders")
                        .HasForeignKey("PaymentType_FK");

                    b.HasOne("ERPWebApp.Data.Entities.HpEmployee", "SalesPersonFkNavigation")
                        .WithMany("SoSalesOrder")
                        .HasForeignKey("SalesPersonFk")
                        .HasConstraintName("FK_dbo.SO_SalesOrder_dbo.HP_Employee_SalesPerson_FK");

                    b.HasOne("ERPWebApp.Data.Entities.SoOrderStatus", "SostatusFkNavigation")
                        .WithMany("SoSalesOrder")
                        .HasForeignKey("SostatusFk")
                        .HasConstraintName("FK_dbo.SO_SalesOrder_dbo.SO_OrderStatus_SOStatus_FK");

                    b.HasOne("ERPWebApp.Data.Entities.User")
                        .WithMany("SoSalesOrderLastUpdatedByFkboq2Navigation")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.TblMenuGroup", b =>
                {
                    b.HasOne("ERPWebApp.Data.Entities.Group", "Group")
                        .WithMany("TblMenuGroup")
                        .HasForeignKey("GroupId")
                        .HasConstraintName("FK_dbo.tblMenuGroup_dbo.Group_GroupID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPWebApp.Data.Entities.TblMenu", "Menu")
                        .WithMany("TblMenuGroup")
                        .HasForeignKey("MenuId")
                        .HasConstraintName("FK_dbo.tblMenuGroup_dbo.tblMenu_MenuId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.User", b =>
                {
                    b.HasOne("ERPWebApp.Data.Entities.GnCity")
                        .WithMany("tblUsers")
                        .HasForeignKey("GnCityKeyId");
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.UserGroup", b =>
                {
                    b.HasOne("ERPWebApp.Data.Entities.Group", "Group")
                        .WithMany("UserGroup")
                        .HasForeignKey("GroupId")
                        .HasConstraintName("FK_dbo.UserGroup_dbo.Group_GroupID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPWebApp.Data.Entities.User", "User")
                        .WithMany("UserGroup")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_dbo.UserGroup_dbo.User_UserID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPWebApp.Data.Entities.UserProject", b =>
                {
                    b.HasOne("ERPWebApp.Data.Entities.Gnproject", "Project")
                        .WithMany("UserProject")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK_dbo.UserProject_dbo.GNProject_ProjectId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPWebApp.Data.Entities.User", "User")
                        .WithMany("UserProject")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_dbo.UserProject_dbo.User_UserID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
